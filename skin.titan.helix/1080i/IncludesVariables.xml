<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
    <!-- ====== -->
    <!-- Header -->
    <!-- ====== -->
    <variable name="value_header">
		
		<value condition="window.isactive(dialogfavourites.xml)">$LOCALIZE[1036]</value>
		<value condition="window.isactive(home) + [[SubString(Window(Home).Property(submenu),show) | Control.HasFocus(4444)] + Skin.String(SubmenuLayout, subpage)]">$INFO[Container(300).ListItem.Label]</value>
		<value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml) + !IsEmpty(Window(Home).Property(actor.title))">$INFO[Window(Home).Property(actor.title)]</value>
		
		<value condition="window.isactive(movieinformation) + !IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="window.isactive(movieinformation) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="Window.IsActive(ProfileSettings.xml) | Window.IsActive(SettingsProfile.xml)">$LOCALIZE[10130]</value>
		<value condition="Window.IsActive(DialogSelect.xml) + StringCompare(Window(Home).Property(customWidget), active)">$ADDON[script.skinshortcuts 32044]</value>
		<value condition="Window.IsActive(DialogSelect.xml) + !IsEmpty(Control.GetLabel(1))">$INFO[Control.GetLabel(1)]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml) + !IsEmpty(Control.GetLabel(500))">$INFO[Control.GetLabel(500)]</value>
		<value condition="Window.IsActive(script-skinshortcuts.xml)">$LOCALIZE[31014]</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">$INFO[System.AddonTitle(script.tv.show.next.aired)]</value>
        <value condition="Window.IsActive(Home.xml) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile)">[UPPERCASE]$LOCALIZE[10000][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,Radio)">[UPPERCASE]$LOCALIZE[19021][/UPPERCASE]</value>
        
		<value condition="Container.Content(movies) + Skin.HasSetting(ShowMovieTitleHeader) + !StringCompare(ListItem.Title,..)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] $INFO[ListItem.Title,• ,]</value>
		<value condition="Container.Content(tvshows) + Skin.HasSetting(ShowMovieTitleHeader) + !StringCompare(ListItem.Title,..)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[ListItem.Title,• ,]</value>

		
		<value condition="Container.Content(movies) + StringCompare(Container.FolderName,$LOCALIZE[369])">[UPPERCASE]$LOCALIZE[342][/UPPERCASE]</value>
		<value condition="Container.Content(tvshows) + StringCompare(Container.FolderName,$LOCALIZE[369])">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
		
		<value condition="Container.Content(movies) + stringcompare(Container.FolderPath,special://skin/extras/widgetplaylists/recentmovies.xsp)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] • $LOCALIZE[20386]</value>
		<value condition="Container.Content(movies) + stringcompare(Container.FolderPath,special://skin/extras/widgetplaylists/inprogressmovies.xsp)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] • $LOCALIZE[31035]</value>
		<value condition="Container.Content(movies) + stringcompare(Container.FolderPath,special://skin/extras/widgetplaylists/unwatchedmovies.xsp)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] • $LOCALIZE[16101]</value>
		<value condition="Container.Content(episodes) + stringcompare(Container.FolderPath,special://skin/extras/widgetplaylists/recentepisodes.xsp)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] • $LOCALIZE[20387]</value>
		
		<value condition="Container.Content(movies)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="Container.Content(seasons) + !IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[ListItem.TvShowTitle,• ]</value>
		<value condition="Container.Content(tvshows)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="Container.Content(episodes) + !IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TvShowTitle] $INFO[ListItem.Season,• $LOCALIZE[20373] ,]</value>
		
		
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + !IsEmpty(Window.Property(IsRadio))">[UPPERCASE]$LOCALIZE[19021][/UPPERCASE]</value>
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + Window.IsActive(TVGuide)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[22020] $INFO[Control.GetLabel(30),• ]</value>
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + Window.IsActive(TVChannels)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19019] $INFO[Control.GetLabel(29),• ]</value>
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + Window.IsActive(TVRecordings)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19017]</value>
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + Window.IsActive(TVTimers)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[19040]</value>
		<value condition="SubString(Window.Property(xmlfile),MyPVR,left) + Window.IsActive(TVSearch)">[UPPERCASE]$LOCALIZE[19020][/UPPERCASE] • $LOCALIZE[137]</value>
		
		<value condition="Window.IsActive(MyMusicNav.xml)">[UPPERCASE]$LOCALIZE[2][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
        
		<value condition="Container.Content(seasons) + !IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle] > $LOCALIZE[33054][/UPPERCASE]</value>

        <value condition="substring(Container.FolderPath,plugin://plugin.video.netflixbmc)">[UPPERCASE]$LOCALIZE[31018][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,plugin://plugin.video.youtube)">[UPPERCASE]$LOCALIZE[31062][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,plugin://plugin.video.xbmb3c)">[UPPERCASE]$LOCALIZE[31091][/UPPERCASE]</value>
		
		<value condition="stringcompare(Container.FolderPath,library://video/movies/)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE]</value>
		<value condition="stringcompare(Container.FolderPath,library://video/tvshows/)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
		
		<value condition="substring(Container.FolderPath,movies)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		<value condition="substring(Container.FolderPath,tvshows)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
		
		<value condition="Window.IsActive(MyVideoNav.xml)">[UPPERCASE]$LOCALIZE[3][/UPPERCASE] $INFO[Container.FolderName,• ,]</value>
        <value condition="Window.IsActive(MyWeather.xml)">[UPPERCASE]$LOCALIZE[8][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPics.xml)">[UPPERCASE]$LOCALIZE[1213][/UPPERCASE]</value>
        <value condition="Window.IsActive(AddonBrowser.xml)">[UPPERCASE]$LOCALIZE[10040][/UPPERCASE]</value>
        <value condition="Window.IsActive(FileManager.xml)">[UPPERCASE]$LOCALIZE[10003][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicPlaylist.xml)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[559][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicSongs.xml)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[1214][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPrograms.xml)">[UPPERCASE]$LOCALIZE[10001][/UPPERCASE]</value>
        <value condition="Window.IsActive(Settings.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SkinSettings.xml)">SKIN [UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SettingsCategory.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SettingsSystemInfo.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPVR.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)">[UPPERCASE]$LOCALIZE[31088][/UPPERCASE] $INFO[ListItem.ChannelGroup,• ]</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>
	</variable>
	
	<variable name="value_subheader">
		<value condition="Window.IsActive(script-ExtendedInfo Script-DialogInfo.xml)">[CR]</value>
		<value condition="Window.IsActive(MyWeather.xml)">$INFO[Control.GetLabel(3)]</value>
		<value condition="[window.isactive(mypvrrecordings.xml) | window.isactive(mypvrtimers.xml) | window.isactive(mypvrchannels.xml) | window.isactive(mypvrguide.xml) | window.isactive(mypvr.xml)] + !IsEmpty(Pvr.NowRecordingTitle)">$INFO[Pvr.NowRecordingTitle,$LOCALIZE[19158]: ] ($INFO[Pvr.NowRecordingChannel])</value>
		<value condition="[window.isactive(mypvrrecordings.xml) | window.isactive(mypvrtimers.xml) | window.isactive(mypvrguide.xml) | window.isactive(mypvr.xml)] + !IsEmpty(Pvr.NextRecordingTitle)">$INFO[Pvr.NextRecordingTitle,$LOCALIZE[19025]: ] ($INFO[Pvr.NextRecordingDateTime])</value>
		<value condition="window.isactive(movieinformation) + !IsEmpty(ListItem.Season)">$LOCALIZE[20373] $INFO[ListItem.Season] $LOCALIZE[20452] $INFO[ListItem.Episode]: $INFO[ListItem.Title]</value>
		<value condition="window.isactive(movieinformation)">$INFO[ListItem.TagLine]</value>
		<value condition="!IsEmpty(Container.NumItems) + ![Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[Container.NumItems,, $LOCALIZE[31034]]</value>
	</variable>
	
	<variable name="mediatitle">
		<value condition="Container.Content(episodes) + !IsEmpty(ListItem.Episode)">$INFO[ListItem.Episode]. $INFO[ListItem.Title]</value>
		
		<value condition="!IsEmpty(ListItem.Title) + !StringCompare(ListItem.Title,..)">$INFO[ListItem.Title]</value>
		<value condition="Container.Content(tvshows) + !IsEmpty(ListItem.Title) + !StringCompare(ListItem.Title,..)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	
    <variable name="value_header_icon">
        <value condition="Window.IsActive(Home.xml) + !Skin.HasSetting(WeatherOnHome) + !Skin.HasSetting(ShowProfile)">icons/icon_home.png</value>
		<value condition="Window.IsActive(script-NextAired-TVGuide.xml) | Window.IsActive(script-NextAired-TVGuide2.xml)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(movies)">icons/icon_movies.png</value>
        <value condition="Container.Content(tvshows)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(seasons)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(episodes)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(genres)">icons/icon_movies.png</value>
        <value condition="![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(genres)] + Window.IsActive(MyVideoNav.xml)">icons/icon_movies.png</value>
        <value condition="Window.IsActive(MyMusicNav.xml)">icons/icon_music.png</value>
		<value condition="Window.IsActive(MyVideoNav.xml)">icons/icon_videos.png</value>
        <value condition="Window.IsActive(MyWeather.xml)">icons/icon_weather.png</value>
        <value condition="Window.IsActive(MyPics.xml)">icons/icon_pictures.png</value>
        <value condition="Window.IsActive(AddonBrowser.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(FileManager.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(MyMusicPlaylist.xml)">icons/icon_music.png</value>
        <value condition="Window.IsActive(MyMusicSongs.xml)">icons/icon_music.png</value>
        <value condition="Window.IsActive(MyPrograms.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(Settings.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SkinSettings.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SettingsCategory.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SettingsSystemInfo.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(MyPVR.xml) | Window.IsActive(MyPVRGuide.xml) | Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRSearch.xml)">icons/icon_tvshows.png</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">icons/icon_music.png</value>
    </variable>
    <!-- ========== -->
    <!-- List Label -->
    <!-- ========== -->
    <variable name="value_list_label_1">
        <value condition="!Container.Content(albums)">$INFO[ListItem.Label]</value>
        <value condition="Container.Content(albums)">$INFO[ListItem.Label2] - $INFO[ListItem.Label]</value>
    </variable>
	
	<variable name="ViewDetailsFocusColor">
		<value condition="skin.string(ViewDetailsFocusColor, blue)">blue</value>
		<value condition="skin.string(ViewDetailsFocusColor, white)">white</value>
		<value condition="skin.string(ViewDetailsFocusColor, mainblue)">mainblue</value>
		<value condition="skin.string(ViewDetailsFocusColor, green)">green</value>
		<value condition="skin.string(ViewDetailsFocusColor, orange)">orange</value>
		<value condition="skin.string(ViewDetailsFocusColor, bluegrey)">bluegrey</value>
		<value condition="skin.string(ViewDetailsFocusColor, darkblue)">darkblue</value>
		<value condition="skin.string(ViewDetailsFocusColor, pink)">pink</value>
		<value condition="skin.string(ViewDetailsFocusColor, purple)">purple</value>
		<value condition="skin.string(ViewDetailsFocusColor, lime)">lime</value>
		<value condition="skin.string(ViewDetailsFocusColor, yellow)">yellow</value>
		<value condition="skin.string(ViewDetailsFocusColor, cyan)">cyan</value>
		<value condition="skin.string(ViewDetailsFocusColor, magenta)">magenta</value>
		<value condition="skin.string(ViewDetailsFocusColor, lightgrey)">lightgrey</value>
		<value condition="skin.string(ViewDetailsFocusColor, aawhite)">aawhite</value>
		<value condition="skin.string(ViewDetailsFocusColor, ddwhite)">ddwhite</value>
		<value condition="skin.string(ViewDetailsFocusColor, black)">black</value>
		<value condition="skin.string(ViewDetailsFocusColor, darkgrey)">darkgrey</value>
		<value>white</value>
    </variable>
	
    <variable name="value_list_label_2">
        <value condition="[Container.Content(movies) | Container.Content(musicvideos)] + ![SubString(ListItem.Duration,min) | SubString(ListItem.Path,videodb://1/7,left)]">$INFO[ListItem.Duration,[B]$LOCALIZE[180]:[/B] ,min]$INFO[ListItem.Director, - [B]$LOCALIZE[20339]:[/B] ]</value>
        <value condition="[Container.Content(movies) | Container.Content(musicvideos)] + SubString(ListItem.Duration,min) + !SubString(ListItem.Path,videodb://1/7,left)">$INFO[ListItem.Duration,[B]$LOCALIZE[180]:[/B]]$INFO[ListItem.Director, - [B]$LOCALIZE[20339]:[/B] ]</value>
        <value condition="SubString(ListItem.Path,videodb://1/7,left)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[20457][/COLOR]</value>
        <!-- Movie Sets -->
        <value condition="Container.Content(tvshows) + !IsEmpty(ListItem.Episode)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[20360]: [/COLOR]$INFO[ListItem.Episode]  - [COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[16101]: [/COLOR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
        <value condition="Container.Content(seasons) + !IsEmpty(ListItem.Episode)">[COLOR=$VAR[ViewDetailsFocusColor]]$INFO[ListItem.TVShowTitle][/COLOR] - [COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[20360]: [/COLOR]$INFO[ListItem.Property(TotalEpisodes)] - [COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[16101]: [/COLOR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
        <value condition="Container.Content(episodes) + !SubString(ListItem.Duration,min)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] min - [COLOR=$VAR[ViewDetailsFocusColor]]$INFO[ListItem.TVShowTitle][/COLOR]</value>
        <value condition="Container.Content(episodes) + SubString(ListItem.Duration,min)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] - [COLOR=$VAR[ViewDetailsFocusColor]]$INFO[ListItem.TVShowTitle][/COLOR]</value>
        <value condition="Container.Content(artists)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[21898]: [/COLOR]$INFO[ListItem.Property(Artist_YearsActive)]</value>
        <!-- YearsActive/Artists -->
        <value condition="Container.Content(songs) + !SubString(ListItem.Duration,min)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] min</value>
        <value condition="Container.Content(songs) + SubString(ListItem.Duration,min)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration]</value>
        <value condition="Container.Content(addons) + !IsEmpty(ListItem.Property(Addon.Version)) + IsEmpty(ListItem.Label2)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[24051] [/COLOR]$INFO[ListItem.Property(Addon.Version)] - [COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[21863]: [/COLOR]$INFO[ListItem.Property(Addon.Creator)]</value>
        <value condition="Container.Content(addons) + !IsEmpty(ListItem.Property(Addon.Version)) + !IsEmpty(ListItem.Label2)">[COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[24051] [/COLOR]$INFO[ListItem.Property(Addon.Version)] - [COLOR=$VAR[ViewDetailsFocusColor]]$LOCALIZE[21863]: [/COLOR]$INFO[ListItem.Property(Addon.Creator)] - [COLOR=$VAR[ViewDetailsFocusColor]]$INFO[ListItem.Label2][/COLOR]</value>
    </variable>
	
	
	<variable name="RatingFlagVar">
        <value condition="SubString(ListItem.mpaa,US:G) | SubString(ListItem.mpaa,USA:G) | SubString(ListItem.mpaa,Rated G)">G</value>
        <value condition="SubString(ListItem.mpaa,PG-13)">PG-13</value>
        <value condition="Substring(ListItem.mpaa,Rated PG) | StringCompare(ListItem.Mpaa,PG)">US-PG</value>
        <value condition="SubString(ListItem.mpaa,US:R) | SubString(ListItem.mpaa,USA:R) | SubString(ListItem.mpaa,Rated R) | StringCompare(ListItem.mpaa,R)">US-R</value>
        <value condition="SubString(ListItem.mpaa,US:NC-17)| SubString(ListItem.mpaa,USA:NC-17)| SubString(ListItem.mpaa,Rated NC-17)">US-17</value>
        <value condition="SubString(ListItem.mpaa,UK:U)">UK-ALL</value>
		<value condition="SubString(ListItem.mpaa,UK:PG)">UK-PG</value>
		<value condition="SubString(ListItem.mpaa,UK:12A)">UK-12A</value>
		<value condition="SubString(ListItem.mpaa,UK:12)">UK-12</value>
		<value condition="SubString(ListItem.mpaa,UK:15)">UK-15</value>
		<value condition="SubString(ListItem.mpaa,UK:18)">UK-18</value>
		<value condition="SubString(ListItem.mpaa,Germany:16) | SubString(ListItem.mpaa,ab 16) | SubString(ListItem.mpaa,FSK 16)">FSK-16</value>
		<value condition="SubString(ListItem.mpaa,Germany:6)| SubString(ListItem.mpaa,ab 6) | SubString(ListItem.mpaa,FSK 6)">FSK-6</value>
		<value condition="SubString(ListItem.mpaa,Germany:12) | SubString(ListItem.mpaa,ab 12) | SubString(ListItem.mpaa,FSK 12)">FSK-12</value>
		<value condition="SubString(ListItem.mpaa,Germany:18) | SubString(ListItem.mpaa,ab 18) | SubString(ListItem.mpaa,FSK 18)">FSK-18</value>
		<value condition="SubString(ListItem.mpaa,Germany)|SubString(ListItem.mpaa,FSK)| SubString(ListItem.mpaa,o.A) | SubString(ListItem.mpaa,FSK 0)">FSK-0</value>
		<value condition="SubString(ListItem.mpaa,besorolás alatt)">BA</value>
		<value condition="SubString(ListItem.mpaa,korhatárra való tekintett nélkül megtekintetheto)">KN</value>
		<value condition="SubString(ListItem.mpaa,12 éven aluliak számára a megtekintése nagykorú felügyelete mellett ajánlott)">12</value>
		<value condition="SubString(ListItem.mpaa,16 éven aluliak számára nem ajánlott)">16</value>
		<value condition="SubString(ListItem.mpaa,18 éven aluliak számára nem ajánlott)">18</value>
		<value condition="substring(ListItem.mpaa,France:U) | Substring(ListItem.mpaa,partir de 3 ans) | Substring(ListItem.mpaa,partir de 6 ans)">CSA-U</value>
		<value condition="substring(ListItem.mpaa,France:-10) | Substring(ListItem.mpaa,Interdit aux moins de 10 ans) | Substring(ListItem.mpaa,des propos ou des images peuvent heurter)">CSA-10</value>
		<value condition="substring(ListItem.mpaa,France:-12) | Substring(ListItem.mpaa,Interdit aux moins de 12 ans)">CSA-12</value>
		<value condition="substring(ListItem.mpaa,France:-16) | Substring(ListItem.mpaa,Interdit aux moins de 16 ans)">CSA-16</value>
		<value condition="substring(ListItem.mpaa,France:-18) | Substring(ListItem.mpaa,Interdit aux moins de 18 ans)">CSA-18</value>
		<value condition="substring(ListItem.mpaa,Brazil:Livre) | substring(ListItem.mpaa,Livre)">L</value>
		<value condition="substring(ListItem.mpaa,Brazil:10) | substring(ListItem.mpaa,10 anos)">10</value>
		<value condition="substring(ListItem.mpaa,Brazil:12) | substring(ListItem.mpaa,12 anos)">12</value>
		<value condition="substring(ListItem.mpaa,Brazil:14) | substring(ListItem.mpaa,14 anos)">14</value>
		<value condition="substring(ListItem.mpaa,Brazil:16) | substring(ListItem.mpaa,16 anos)">16</value>
		<value condition="substring(ListItem.mpaa,Brazil:18) | substring(ListItem.mpaa,18 anos)">18</value>
		<value>$INFO[ListItem.MPAA]</value>
	</variable>
	
	<variable name="VideoAspectVar">
		<value condition="StringCompare(ListItem.VideoAspect,1.33)">4:3</value>
		<value condition="StringCompare(ListItem.VideoAspect,1.37)">4:3</value>
		<value condition="StringCompare(ListItem.VideoAspect,1.78)">16:9</value>
		<value condition="StringCompare(ListItem.VideoAspect,1.85)">16:9</value>
		
		<value condition="StringCompare(VideoPlayer.VideoAspect,1.33)">4:3</value>
		<value condition="StringCompare(VideoPlayer.VideoAspect,1.37)">4:3</value>
		<value condition="StringCompare(VideoPlayer.VideoAspect,1.78)">16:9</value>
		<value condition="StringCompare(VideoPlayer.VideoAspect,1.85)">16:9</value>
		<value condition="!IsEmpty(VideoPlayer.VideoAspect)">$INFO[VideoPlayer.VideoAspect]</value>
		<value>$INFO[ListItem.VideoAspect]</value>
	</variable>
	
	<variable name="VideoCodecVar">
		<value condition="SubString(ListItem.VideoCodec,H264)">H.264</value>
		<value condition="SubString(ListItem.VideoCodec,H265)">H.265</value>
		<value condition="SubString(ListItem.VideoCodec,MPEG2)">MPEG2</value>
		
		<value condition="SubString(VideoPlayer.VideoCodec,H264)">H.264</value>
		<value condition="SubString(VideoPlayer.VideoCodec,H265)">H.265</value>
		<value condition="SubString(VideoPlayer.VideoCodec,MPEG2)">MPEG2</value>
		<value condition="!IsEmpty(VideoPlayer.VideoCodec)">$INFO[VideoPlayer.VideoCodec]</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>
	
	<variable name="AudioCodecVar">
		
		<value condition="StringCompare(ListItem.AudioCodec,ac3)">DOLBY D</value>
		<value condition="StringCompare(ListItem.AudioCodec,dca)">DTS</value>
		<value condition="SubString(ListItem.AudioCodec,dts-hd)">DTS HD</value>
		<value condition="SubString(ListItem.AudioCodec,dtshd)">DTS HD</value>
		<value condition="SubString(ListItem.AudioCodec,pcm)">PCM</value>
		
		<value condition="!IsEmpty(MusicPlayer.Codec)">$INFO[MusicPlayer.Codec]</value>
		<value condition="StringCompare(VideoPlayer.AudioCodec,ac3)">DOLBY D</value>
		<value condition="StringCompare(VideoPlayer.AudioCodec,dca)">DTS</value>
		<value condition="SubString(VideoPlayer.AudioCodec,dts-hd)">DTS HD</value>
		<value condition="SubString(VideoPlayer.AudioCodec,dtshd)">DTS HD</value>
		<value condition="SubString(VideoPlayer.AudioCodec,pcm)">PCM</value>
		<value condition="!IsEmpty(VideoPlayer.AudioCodec)">$INFO[VideoPlayer.AudioCodec]</value>

		<value>$INFO[ListItem.AudioCodec]</value>
	</variable>
	
	<variable name="AudioChannelsVar">
		<value condition="StringCompare(ListItem.AudioChannels,1)">1.0</value>
		<value condition="StringCompare(ListItem.AudioChannels,2)">2.0</value>
		<value condition="StringCompare(ListItem.AudioChannels,3)">2.1</value>
		<value condition="StringCompare(ListItem.AudioChannels,4)">4.0</value>
		<value condition="StringCompare(ListItem.AudioChannels,5)">5.0</value>
		<value condition="StringCompare(ListItem.AudioChannels,6)">5.1</value>
		<value condition="StringCompare(ListItem.AudioChannels,7)">6.1</value>
		<value condition="StringCompare(ListItem.AudioChannels,8)">7.1</value>
		<value condition="StringCompare(ListItem.AudioChannels,9)">9.1</value>
		
		<value condition="StringCompare(MusicPlayer.Channels,1)">1.0</value>
		<value condition="StringCompare(MusicPlayer.Channels,2)">2.0</value>
		<value condition="StringCompare(MusicPlayer.Channels,3)">2.1</value>
		<value condition="StringCompare(MusicPlayer.Channels,4)">4.0</value>
		<value condition="StringCompare(MusicPlayer.Channels,5)">5.0</value>
		<value condition="StringCompare(MusicPlayer.Channels,6)">5.1</value>
		<value condition="StringCompare(MusicPlayer.Channels,7)">6.1</value>
		<value condition="StringCompare(MusicPlayer.Channels,8)">7.1</value>
		<value condition="StringCompare(MusicPlayer.Channels,9)">9.1</value>
		<value condition="!IsEmpty(MusicPlayer.Channels)">$INFO[MusicPlayer.Channels]</value>
		
		<value condition="StringCompare(VideoPlayer.AudioChannels,1)">1.0</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,2)">2.0</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,3)">2.1</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,4)">4.0</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,5)">5.0</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,6)">5.1</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,7)">6.1</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,8)">7.1</value>
		<value condition="StringCompare(VideoPlayer.AudioChannels,9)">9.1</value>
		<value condition="!IsEmpty(VideoPlayer.AudioChannels)">$INFO[VideoPlayer.AudioChannels]</value>
		
		<value>$INFO[ListItem.AudioChannels]</value>
	</variable>
	
    <!-- =============== -->
    <!-- Additional Info -->
    <!-- =============== -->
    <variable name="value_ground1_label">
        <!-- Land / Premiere -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[21875] :</value>
        <!-- Land -->
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">Premiere :</value>
        <!-- Premiere -->
    </variable>
    <variable name="value_ground1_value">
		<value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Country)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Country]</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Premiered]</value>
    </variable>
    <variable name="value_ground2_label">
        <!-- Genre / Regie -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$LOCALIZE[515] :</value>
        <!-- Genre -->
        <value condition="Container.Content(episodes)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
    </variable>
    <variable name="value_ground2_value">
	<value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Genre)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(episodes)">$INFO[ListItem.Director]</value>
    </variable>
    <variable name="value_ground3_label">
        <!-- Studio -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$LOCALIZE[20388] :</value>
        <!-- Studio -->
    </variable>
    <variable name="value_ground3_value">
		<value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Studio)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Studio]</value>
    </variable>
    <variable name="value_ground4_label">
        <!-- Regie / Episodes (counter) / Duration -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
        <value condition="Container.Content(tvshows)">$LOCALIZE[20360] :</value>
        <!-- Episodes -->
        <value condition="Container.Content(episodes)">$LOCALIZE[180] :</value>
        <!-- Duration -->
    </variable>
    <variable name="value_ground4_value">
		<value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Director)]</value>
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Director]</value>
        <value condition="Container.Content(tvshows)">$INFO[ListItem.Property(TotalEpisodes)] ($LOCALIZE[16101]: $INFO[ListItem.Property(UnwatchedEpisodes)])</value>
        <value condition="Container.Content(episodes) + !SubString(ListItem.Duration,min)">$INFO[ListItem.Duration] min</value>
        <value condition="Container.Content(episodes) + SubString(ListItem.Duration,min)">$INFO[ListItem.Duration]</value>
    </variable>
	
    <variable name="MusicButtonThumb">
		<value condition="Skin.HasSetting(HomeMenuUseMBforMusic) + !IsEmpty(Window.Property(MB3.Background.Music.FanArt.small))">$INFO[Window.Property(MB3.Background.Music.FanArt.small)]</value>
        <value condition="!IsEmpty(Window(Home).Property(script.grab.fanart.Music.FanArt))">$INFO[Window(Home).Property(script.grab.fanart.Music.FanArt)]</value>
        <value>special://skin/extras/hometiles/music.png</value>
    </variable>
	
    <variable name="MoviesButtonThumb">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies) + !IsEmpty(Window.Property(MB3.Background.Movie.FanArt.small))">$INFO[Window.Property(MB3.Background.Movie.FanArt.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(script.grab.fanart.Movie.FanArt))">$INFO[Window(Home).Property(script.grab.fanart.Movie.FanArt)]</value>
        <value>special://skin/extras/hometiles/movies.png</value>
    </variable>
	
	<variable name="MoviesGenresButtonThumb">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies) + !IsEmpty(Window.Property(MB3.Background.Movie.FanArt.small))">$INFO[Window.Property(MB3.Background.Movie.FanArt.small)]</value>
        <value>special://skin/extras/defaulticonswide/defaultgenre.png</value>
    </variable>
	
	
    <variable name="TvseriesButtonThumb">
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries) + !IsEmpty(Window(Home).Property(MB3.Background.TV.FanArt.small))">$INFO[Window.Property(MB3.Background.TV.FanArt.small)]</value>
		<value condition="Skin.HasSetting(HomeMenuUsePlexforTVseries) + !IsEmpty(Window(Home).Property(Window(Home).Property(plexbmc.2.icon)))">$INFO[Window(Home).Property(Window(Home).Property(plexbmc.2.icon))]</value>
        <value condition="!IsEmpty(Window(Home).Property(script.grab.fanart.TV.FanArt))">$INFO[Window(Home).Property(script.grab.fanart.TV.FanArt)]</value>
        <value>special://skin/extras/hometiles/tvseries.png</value>
    </variable>
	
    <variable name="MusicVideosButtonThumb">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusicVideos) + !IsEmpty(Window(Home).Property(MB3.Background.MusicVideos.FanArt.small))">$INFO[Window(Home).Property(MB3.Background.MusicVideos.FanArt.small)]</value>
        <value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.1.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.1.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.2.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.2.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.3.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.3.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.4.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.4.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.5.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.5.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.6.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.6.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.7.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.7.Fanart)]</value>
		<value condition="!IsEmpty(Window(Home).Property(RandomMusicVideo.8.Fanart))">$INFO[Window(Home).Property(RandomMusicVideo.8.Fanart)]</value>
		<value>special://skin/extras/backgrounds/hover_my music.jpg</value>
    </variable>
    <variable name="WeatherButtonThumb">
        <value condition="Weather.IsFetched + !IsEmpty(Weather.FanartCode)">special://skin/extras/weather/$INFO[Window(Weather).Property(Day0.fanartCode)]/weather.jpg</value>
		<value>special://skin/extras/backgrounds/weather.png</value>
    </variable>
    <variable name="PicturesButtonThumb">
		<value condition="!IsEmpty(Window(Home).Property(MB3.Background.Photos.FanArt.small))">$INFO[Window(Home).Property(MB3.Background.Photos.FanArt.small)]</value>
        <value>special://skin/extras/hometiles/pictures.png</value>
    </variable>
	
	<variable name="WeatherFanArtPath">
		<value condition="Skin.String(CustomWeatherFanArtPath)">$INFO[Skin.String(CustomWeatherFanArtPath)]</value>
        <value>special://skin/extras/weather/</value>
	</variable>

	<variable name="Custom0Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.0.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.0.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.0.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.0.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom1Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.1.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.1.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.1.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.1.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom2Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.2.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.2.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.2.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.2.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom3Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.3.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.3.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.3.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.3.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom4Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.4.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.4.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.4.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.4.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom5Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.5.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.5.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.5.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.5.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom6Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.6.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.6.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.6.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.6.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom7Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.7.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.7.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.7.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.7.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom8Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.8.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.8.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.8.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.8.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
    <variable name="Custom9Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.9.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.9.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.9.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.9.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="Custom10Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.10.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.10.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.10.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.10.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="Custom11Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.11.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.11.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.11.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.11.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="Custom12Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.12.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.12.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.12.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.12.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="Custom13Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.13.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.13.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.13.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.13.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="Custom14Thumb">
        <value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.14.background.small))">$INFO[Window(Home).Property(MediaBrowser.usr.14.background.small)]</value>
		<value condition="!IsEmpty(Window(Home).Property(MediaBrowser.usr.14.fanart))">$INFO[Window(Home).Property(MediaBrowser.usr.14.fanart)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	<variable name="PlexCustomThumb0">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.0.background))">$INFO[Window(Home).Property(plexbmc.0.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.0.icon))">$INFO[Window(Home).Property(plexbmc.0.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	<variable name="PlexCustomThumb1">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.1.background))">$INFO[Window(Home).Property(plexbmc.1.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.1.icon))">$INFO[Window(Home).Property(plexbmc.1.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb2">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.2.background))">$INFO[Window(Home).Property(plexbmc.2.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.2.icon))">$INFO[Window(Home).Property(plexbmc.2.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb3">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.3.background))">$INFO[Window(Home).Property(plexbmc.3.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.3.icon))">$INFO[Window(Home).Property(plexbmc.3.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb4">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.4.background))">$INFO[Window(Home).Property(plexbmc.4.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.4.icon))">$INFO[Window(Home).Property(plexbmc.4.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb5">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.5.background))">$INFO[Window(Home).Property(plexbmc.5.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.5.icon))">$INFO[Window(Home).Property(plexbmc.5.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb6">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.6.background))">$INFO[Window(Home).Property(plexbmc.6.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.6.icon))">$INFO[Window(Home).Property(plexbmc.6.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb7">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.7.background))">$INFO[Window(Home).Property(plexbmc.7.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.7.icon))">$INFO[Window(Home).Property(plexbmc.7.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb8">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.8.background))">$INFO[Window(Home).Property(plexbmc.8.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.8.icon))">$INFO[Window(Home).Property(plexbmc.8.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>
	
	<variable name="PlexCustomThumb9">
        <value condition="!IsEmpty(Window(Home).Property(plexbmc.9.background))">$INFO[Window(Home).Property(plexbmc.9.background)]</value>
		<value condition="!IsEmpty(Window(Home).Property(plexbmc.9.icon))">$INFO[Window(Home).Property(plexbmc.9.icon)]</value>
        <value>special://skin/extras/hometiles/plexbmc.png</value>
    </variable>

    <variable name="MB3FavoritesThumb">
        <value condition="!IsEmpty(Window(Home).Property(MB3.Background.FavouriteMovies.FanArt.small))">$INFO[Window(Home).Property(MB3.Background.FavouriteMovies.FanArt.small)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	
	<variable name="MB3FavoriteTvShowsThumb">
        <value condition="!IsEmpty(Window(Home).Property(MB3.Background.FavouriteShows.FanArt.small))">$INFO[Window(Home).Property(MB3.Background.FavouriteShows.FanArt.small)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	
    <variable name="MB3ChannelsThumb">
        <value condition="!IsEmpty(Window(Home).Property(MB3.Background.Channels.FanArt.small))">$INFO[Window(Home).Property(MB3.Background.Channels.FanArt.small)]</value>
        <value>special://skin/extras/hometiles/mediabrowser.png</value>
    </variable>
	
	<variable name="NextAiredThumb">
        <value condition="!IsEmpty(Window(Home).Property(NextAired.0.Art(fanart)))">$INFO[Window(Home).Property(NextAired.0.Art(fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(NextAired.1.Art(fanart)))">$INFO[Window(Home).Property(NextAired.1.Art(fanart))]</value>
        <value>special://skin/extras/defaulticonswide/defaultaddontvinfo.png</value>
    </variable>
	
	<variable name="CustomCollectionClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>

		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-0-title)">$INFO[Window(Home).Property(MediaBrowser.usr.0.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-1-title)">$INFO[Window(Home).Property(MediaBrowser.usr.1.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-2-title)">$INFO[Window(Home).Property(MediaBrowser.usr.2.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-3-title)">$INFO[Window(Home).Property(MediaBrowser.usr.3.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-4-title)">$INFO[Window(Home).Property(MediaBrowser.usr.4.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-5-title)">$INFO[Window(Home).Property(MediaBrowser.usr.5.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-6-title)">$INFO[Window(Home).Property(MediaBrowser.usr.6.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-7-title)">$INFO[Window(Home).Property(MediaBrowser.usr.7.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-8-title)">$INFO[Window(Home).Property(MediaBrowser.usr.8.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-9-title)">$INFO[Window(Home).Property(MediaBrowser.usr.9.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-10-title)">$INFO[Window(Home).Property(MediaBrowser.usr.10.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-11-title)">$INFO[Window(Home).Property(MediaBrowser.usr.11.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-12-title)">$INFO[Window(Home).Property(MediaBrowser.usr.12.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-13-title)">$INFO[Window(Home).Property(MediaBrowser.usr.13.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-14-title)">$INFO[Window(Home).Property(MediaBrowser.usr.14.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), $LOCALIZE[31036])">$INFO[Window(Home).Property(MediaBrowser.std.movies.3.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), $LOCALIZE[31157])">$INFO[Window(Home).Property(MediaBrowser.std.tvshows.4.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),4444) + StringCompare(Container(4444).ListItem.Property(defaultID), $LOCALIZE[19019])">$INFO[Window(Home).Property(MediaBrowser.std.channels.0.path)]</value>
		
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-0-title)">$INFO[Window(Home).Property(MediaBrowser.usr.0.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-1-title)">$INFO[Window(Home).Property(MediaBrowser.usr.1.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-2-title)">$INFO[Window(Home).Property(MediaBrowser.usr.2.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-3-title)">$INFO[Window(Home).Property(MediaBrowser.usr.3.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-4-title)">$INFO[Window(Home).Property(MediaBrowser.usr.4.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-5-title)">$INFO[Window(Home).Property(MediaBrowser.usr.5.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-6-title)">$INFO[Window(Home).Property(MediaBrowser.usr.6.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-7-title)">$INFO[Window(Home).Property(MediaBrowser.usr.7.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-8-title)">$INFO[Window(Home).Property(MediaBrowser.usr.8.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-9-title)">$INFO[Window(Home).Property(MediaBrowser.usr.9.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-10-title)">$INFO[Window(Home).Property(MediaBrowser.usr.10.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-11-title)">$INFO[Window(Home).Property(MediaBrowser.usr.11.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-12-title)">$INFO[Window(Home).Property(MediaBrowser.usr.12.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-13-title)">$INFO[Window(Home).Property(MediaBrowser.usr.13.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), info-window-home-property-mediabrowser-usr-14-title)">$INFO[Window(Home).Property(MediaBrowser.usr.14.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), $LOCALIZE[31036])">$INFO[Window(Home).Property(MediaBrowser.std.movies.3.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), $LOCALIZE[31157])">$INFO[Window(Home).Property(MediaBrowser.std.tvshows.4.path)]</value>
		<value condition="StringCompare(Window(Home).Property(menu),300) + StringCompare(Container(300).ListItem.Property(defaultID), $LOCALIZE[19019])">$INFO[Window(Home).Property(MediaBrowser.std.channels.0.path)]</value>
    </variable>

	<variable name="RecordingsButtonClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        <value>ActivateWindow(TVRecordings,return)</value>
	</variable>
	
    <variable name="MusicButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusic)">$INFO[Window.Property(MediaBrowser.std.music.4.path)]</value>
		<value condition="Skin.HasSetting(HomeMenuUsePlexforMusic)">ActivateWindow(MusicLibrary,"plugin://plugin.video.plexbmc/?url=http://music&amp;mode=22",return)</value>
		<value>ActivateWindow(Music,,return)</value>
	</variable>
	
	<variable name="WeatherButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
		<value>ActivateWindow(Weather)</value>
	</variable>
	
	<variable name="MusicLibraryButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusic)">$INFO[Window.Property(MediaBrowser.std.music.4.path)]</value>
		<value condition="Skin.HasSetting(HomeMenuUsePlexforMusic)">ActivateWindow(Music,"plugin://plugin.video.plexbmc/?url=http://music&amp;mode=22",return)</value>
		<value>ActivateWindow(Music,,return)</value>
    </variable>
	
	<variable name="MusicRecentPlayedButtonOnClick">
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMusic)">ActivateWindow(Music,musicdb://recentlyplayedalbums/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusic)">$INFO[Window.Property(MediaBrowser.std.music.2.path)]</value>
    </variable>
	
	<variable name="MusicRecentAddedButtonOnClick">
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMusic)">ActivateWindow(Music,musicdb://recentlyaddedalbums/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusic)">$INFO[Window.Property(MediaBrowser.std.music.1.path)]</value>
    </variable>
	
    <variable name="NetflixButtonOnClick">
        <value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value>ActivateWindow(Videos,plugin://plugin.video.netflixbmc,return)</value>
    </variable>
    <variable name="MoviesButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=movie&amp;url",return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.0.path)]</value>
		<value>ActivateWindow(Videos,videodb://movies/titles/,return)</value>
    </variable>
	
	<variable name="MoviesTitlesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=movie&amp;url",return)</value>
		<value condition="!Skin.HasSetting(HomeMenuUseMBforMovies)">ActivateWindow(Videos,videodb://movies/titles/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.0.path)]</value>
    </variable>
	
	<variable name="MovieGenresButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">ActivateWindow(10025,&quot;plugin://plugin.video.netflixbmc/?mode=listGenres&amp;thumb&amp;type=movie&amp;url=WiGenre&quot;,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.6.path)]</value>
		<value>ActivateWindow(Videos,videodb://movies/genres/,return)</value>
    </variable>
	
	<variable name="RecentMoviesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=movie&amp;url=http%3a%2f%2fwww.netflix.com%2fWiRecentAdditionsGallery%3fnRR%3dreleaseDate%26nRT%3dall%26pn%3d1%26np%3d1%26actionMethod%3djson",return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.1.path)]</value>
		<value condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(Videos,special://skin/extras/widgetplaylists/recentmovies.xsp,return)</value>
		<value>ActivateWindow(Videos,videodb://recentlyaddedmovies/,return)</value>
    </variable>
	
	<variable name="RecentMoviesButtonThumb">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies) + !IsEmpty(Window(Home).Property(LatestMovieMB3.1.Art(fanart)))">$INFO[Window(Home).Property(LatestMovieMB3.1.Art(fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(RecentMovieBackground))">$INFO[Window(Home).Property(RecentMovieBackground)]</value>
		<value>special://skin/extras/defaulticonswide/defaultrecentlyaddedepisodes.png</value>
    </variable>
	
	<variable name="InProgressMoviesButtonThumb">
		<value condition="!IsEmpty(Window(Home).Property(InProgressMovieMB3.2.Art(fanart)))">$INFO[Window(Home).Property(InProgressMovieMB3.2.Art(fanart))]</value>
        <value condition="!IsEmpty(Window(Home).Property(InProgressMovieMB3.1.Art(fanart)))">$INFO[Window(Home).Property(InProgressMovieMB3.1.Art(fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(InProgressMovieBackground))">$INFO[Window(Home).Property(InProgressMovieBackground)]</value>
		<value>special://skin/extras/defaulticonswide/defaultaddonmovieinfo.png</value>
    </variable>

	<variable name="InProgressMoviesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.2.path)]</value>
		<value>ActivateWindow(Videos,special://skin/extras/widgetplaylists/inprogressmovies.xsp,return)</value>
    </variable>
	
	<variable name="UnwatchedMoviesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MediaBrowser.std.movies.5.path)]</value>
		<value>ActivateWindow(Videos,special://skin/extras/widgetplaylists/unwatchedmovies.xsp,return)</value>
    </variable>
	
	<variable name="UnwatchedMoviesButtonThumb">
		<value condition="Skin.HasSetting(HomeMenuUseMBforMovies) + !IsEmpty(Window(Home).Property(LatestUnplayedMovieMB3.2.Art(fanart)))">$INFO[Window(Home).Property(LatestUnplayedMovieMB3.2.Art(fanart))]</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies) + !IsEmpty(Window(Home).Property(LatestUnplayedMovieMB3.1.Art(fanart)))">$INFO[Window(Home).Property(LatestUnplayedMovieMB3.1.Art(fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(UnwatchedMovieBackground))">$INFO[Window(Home).Property(UnwatchedMovieBackground)]</value>
		<value>special://skin/extras/defaulticonswide/defaultaddonmovieinfo.png</value>
    </variable>

    <variable name="TVseriesButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=tv&amp;url",return)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforTVseries)">ActivateWindow(Videos,videodb://tvshows/titles/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MediaBrowser.std.tvshows.0.path)]</value>
    </variable>
	
	<variable name="TVseriesTitleButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=tv&amp;url",return)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforTVseries)">ActivateWindow(Videos,videodb://tvshows/titles/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MediaBrowser.std.tvshows.0.path)]</value>
    </variable>
	
	<variable name="RecentTVseriesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=tv&amp;url=http%3a%2f%2fwww.netflix.com%2fWiRecentAdditionsGallery%3fnRR%3dreleaseDate%26nRT%3dall%26pn%3d1%26np%3d1%26actionMethod%3djson",return)</value>
		<value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MediaBrowser.std.tvshows.1.path)]</value>
		<value condition="Skin.HasSetting(HideWatchedRecentlyAdded)">ActivateWindow(Videos,special://skin/extras/widgetplaylists/recentepisodes.xsp,return)</value>
		<value>ActivateWindow(Videos,videodb://recentlyaddedepisodes/,return)</value>
    </variable>
	
	<variable name="RecentTVseriesButtonThumb">
		<value condition="Skin.HasSetting(HomeMenuUseMBforTVseries) + !IsEmpty(Window(Home).Property(LatestEpisodeMB3.1.Art(tvshow.fanart)))">$INFO[Window(Home).Property(LatestEpisodeMB3.1.Art(tvshow.fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(RecentEpisodesBackground))">$INFO[Window(Home).Property(RecentEpisodesBackground)]</value>
		<value>special://skin/extras/defaulticonswide/defaultrecentlyaddedepisodes.png</value>
    </variable>
	
	<variable name="InprogressTVseriesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=tv&amp;url=http%3a%2f%2fwww.netflix.com%2fMyList%3fleid%3d595%26link%3dseeall",return)</value>
		<value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MediaBrowser.std.tvshows.3.path)]</value>
        <value>ActivateWindow(Videos,library://video/inprogressshows.xml,return)</value>
    </variable>
	
	<variable name="InprogressTVseriesButtonThumb">
		<value condition="Skin.HasSetting(HomeMenuUseMBforTVseries) + !IsEmpty(Window(Home).Property(InProgresstEpisodeMB3.2.Art(tvshow.fanart)))">$INFO[Window(Home).Property(LatestEpisodeMB3.2.Art(tvshow.fanart))]</value>
		<value condition="!IsEmpty(Window(Home).Property(InProgressShowsBackground))">$INFO[Window(Home).Property(InProgressShowsBackground)]</value>
		<value>special://skin/extras/defaulticonswide/defaultaddonvideo.png</value>
    </variable>
	
	<variable name="TVseriesGenresButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,&quot;plugin://plugin.video.netflixbmc/?mode=listTvGenres&amp;thumb&amp;type=tv&amp;url&quot;,return)</value>
		<value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MediaBrowser.std.tvshows.8.path)]</value>
        <value>ActivateWindow(Videos,videodb://tvshows/genres/,return)</value>
    </variable>
	
    <variable name="RadioButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        <value condition="Skin.String(HomeMenuUseRadioCollection)">ActivateWindow(Music,$INFO[Skin.String(HomeMenuUseRadioCollection)],return)</value>
		<value>ActivateWindow(radiochannels,return)</value>
    </variable>
	
    <variable name="PicturesButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value condition="!Skin.HasSetting(HomeMenuUseMBforPictures)">ActivateWindow(pictures,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforPictures)">$INFO[Window.Property(MediaBrowser.std.photo.0.path)]</value>
		<value condition="Skin.HasSetting(HomeMenuUsePlexforPictures)">ActivateWindow(pictures,"plugin://plugin.video.plexbmc/?url=http://photo&amp;mode=22",return)</value>
    </variable>
	
	<variable name="VideosButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value>ActivateWindow(Videos,videodb://,return)</value>
    </variable>
	
	<variable name="AddonsButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value>ActivateWindow(Programs,Addons,return)</value>
    </variable>
	
	<variable name="SettingsButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value>ActivateWindow(Settings)</value>
    </variable>

    <variable name="MusicVideosButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMusicVideos)">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusicVideos)">$INFO[Window.Property(MediaBrowser.std.music.3.path)]</value>
    </variable>

    <variable name="LiveTVButtonOnClick">
		<value condition="StringCompare(Window(Home).Property(menu),300) + [Skin.String(GadgetRows, 2) | Skin.String(GadgetRows,3)] + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)]">SetFocus(4444)</value>
        <value>ActivateWindow(TVGuide)</value>
    </variable>
	
	<variable name="DetailsFanArtImage">
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(season.fanart)) + !substring(Container.FolderPath,plugin://plugin.video)">$INFO[ListItem.Art(season.fanart)]</value>
        <value condition="!IsEmpty(ListItem.Property(small_fanartimage))">$INFO[ListItem.Property(small_fanartimage)]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="StringCompare(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack2.png</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
	
    <variable name="BannerLandscapeImage">
		<value condition="!IsEmpty(ListItem.Thumb) + Container.Content(Episodes) + !IsEmpty(ListItem.Episode) + !Window.IsActive(dialogvideoinfo.xml)">$INFO[ListItem.Thumb]</value>
		<value condition="!IsEmpty(ListItem.Property(medium_landscape)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Property(medium_landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape)) + !Skin.HasSetting(DisableLandscapeThumbs)">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!IsEmpty(ListItem.Property(small_fanartimage))">$INFO[ListItem.Property(small_fanartimage)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(landscape))">$INFO[ListItem.Property(landscape)]</value>
		<value condition="!IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="StringCompare(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack2.png</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
	
	<variable name="BannerLandscapeImageSeason">
        <value condition="Container.Content(Seasons) + IsEmpty(ListItem.Art(landscape)) + IntegerIsGreaterThan(ListItem.Season, 9)">$INFO[ListItem.Path]$INFO[ListItem.Season,season,-landscape.jpg]</value>
        <value condition="Container.Content(Seasons) + IsEmpty(ListItem.Art(landscape)) + !IntegerIsGreaterThan(ListItem.Season, 9)">$INFO[ListItem.Path]$INFO[ListItem.Season,season0,-landscape.jpg]</value>
    </variable>

	
	<variable name="VideoInfoPosterImage">
		<value condition="Container.Content(episodes) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
		<value condition="!IsEmpty(ListItem.Property(TVShowThumb))">$INFO[ListItem.Property(TVShowThumb)]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value>ListItem.Thumb</value>
	 </variable>
	
	<variable name="PosterThumb">
		
		<value condition="Container.Content(seasons) + SubString(ListItem.Label,*,left)">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(seasons) + !IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="Container.Content(episodes) + !IsEmpty(Container.Art(season.poster))">$INFO[Container.Art(season.poster)]</value>
		<value condition="Container.Content(episodes) + !IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!IsEmpty(ListItem.Property(poster))">$INFO[ListItem.Property(poster)]</value>
		<value condition="!IsEmpty(ListItem.Property(tvshow.poster))">$INFO[ListItem.Property(poster)]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="StringCompare(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack.png</value>
		<value condition="StringCompare(ListItem.Label,$LOCALIZE[21452])">dialogs/filebrowser/DefaultAddSource.png</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Path]season0$INFO[ListItem.Season]-poster.jpg</value>
    </variable>
	
	
	
	<variable name="MusicSquareThumb">
		<value condition="!IsEmpty(ListItem.Thumb) + Container.Content(Episodes) + !Window.IsActive(dialogvideoinfo.xml)">$INFO[ListItem.Thumb]</value>
		<value condition="!IsEmpty(ListItem.Art(fanart)) + [Container.Content(movies) | Container.Content(seasons) | Container.Content(tvshows)]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(ListItem.Property(ArtistThumb))">$INFO[ListItem.Property(ArtistThumb)]</value>
		<value condition="!IsEmpty(ListItem.Thumb)">$INFO[ListItem.Thumb]</value>
		<value condition="StringCompare(ListItem.Label,..)">dialogs/filebrowser/DefaultFolderBack.png</value>
		<value condition="StringCompare(ListItem.Label,$LOCALIZE[21452])">dialogs/filebrowser/DefaultAddSource.png</value>
		<value condition="Window.IsActive(MyMusicNav.xml) | Container.Content(albums) | Container.Content(songs)">dialogs/filebrowser/DefaultAudio.png</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value condition="Container.Content(genres)">$INFO[ListItem.Label,special://skin/extras/moviegenres/,.jpg]</value>
		<value condition="!IsEmpty(ListItem.Icon)">$INFO[ListItem.Icon]</value>
		<value condition="!IsEmpty(ListItem.Property(FanArt))">$INFO[ListItem.Property(FanArt)]</value>
    </variable>
	
	<variable name="ListItemClearLogo">
		<value condition="Control.IsVisible(503)">-</value>
		<value condition="!IsEmpty(Container.ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!IsEmpty(Container.ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
		<value condition="Control.IsVisible(200) + !IsEmpty(Container(200).ListItem.Property(Art(clearlogo)))">$INFO[Container(200).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(201) + !IsEmpty(Container(201).ListItem.Property(Art(clearlogo)))">$INFO[Container(201).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(202) + !IsEmpty(Container(202).ListItem.Property(Art(clearlogo)))">$INFO[Container(202).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(203) + !IsEmpty(Container(203).ListItem.Property(Art(clearlogo)))">$INFO[Container(203).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(204) + !IsEmpty(Container(204).ListItem.Property(Art(clearlogo)))">$INFO[Container(204).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(205) + !IsEmpty(Container(205).ListItem.Property(Art(clearlogo)))">$INFO[Container(205).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(206) + !IsEmpty(Container(206).ListItem.Property(Art(clearlogo)))">$INFO[Container(206).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(207) + !IsEmpty(Container(207).ListItem.Property(Art(clearlogo)))">$INFO[Container(207).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(208) + !IsEmpty(Container(208).ListItem.Property(Art(clearlogo)))">$INFO[Container(208).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(209) + !IsEmpty(Container(209).ListItem.Property(Art(clearlogo)))">$INFO[Container(209).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(210) + !IsEmpty(Container(210).ListItem.Property(Art(clearlogo)))">$INFO[Container(210).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(211) + !IsEmpty(Container(211).ListItem.Property(Art(clearlogo)))">$INFO[Container(211).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(212) + !IsEmpty(Container(212).ListItem.Property(Art(clearlogo)))">$INFO[Container(212).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(213) + !IsEmpty(Container(213).ListItem.Property(Art(clearlogo)))">$INFO[Container(213).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(214) + !IsEmpty(Container(214).ListItem.Property(Art(clearlogo)))">$INFO[Container(214).ListItem.Property(Art(clearlogo))]</value>
		<value condition="Control.IsVisible(215) + !IsEmpty(Container(215).ListItem.Property(Art(clearlogo)))">$INFO[Container(215).ListItem.Property(Art(clearlogo))]</value>
	</variable>
	
	
	<variable name="HomeMenuWidgetInfoRating">
		<value condition="!IsEmpty(Container(510).ListItem.Rating) + !skin.hastheme(classic)">$INFO[Container(510).ListItem.Rating,rating/,.png]</value>
		<value condition="!IsEmpty(Container(510).ListItem.Rating) + skin.hastheme(classic)">$INFO[Container(510).ListItem.Rating,rating/10stars_black/,.png]</value>
		<value condition="IsEmpty(Container(510).ListItem.Rating) + !skin.hastheme(classic)">$INFO[Container(510).ListItem.Property(VideoRating),rating/,.png]</value>
		<value condition="IsEmpty(Container(510).ListItem.Rating) + skin.hastheme(classic)">$INFO[Container(510).ListItem.Property(VideoRating),rating/10stars_black/,.png]</value>
    </variable>
	
	<variable name="HomeMenuWidgetInfoRatingLabel">
		<value condition="!IsEmpty(Container(510).ListItem.Rating)">$INFO[Container(510).ListItem.Rating]</value>
		<value>$INFO[Container(510).ListItem.Property(VideoRating)]</value>
    </variable>
	
	<variable name="View_Item_Header">
		<value condition="Container.Content(episodes)">$INFO[ListItem.Episode,,.] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,.] $INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>	
	
	<variable name="LogoImage">
		<value condition="Skin.String(CustomLogoImage)">$INFO[Skin.String(CustomLogoImage)]</value>
        <value condition="Skin.String(ColorTheme, white) + !Skin.String(GadgetRows, simplever)">kodi_logo_dark.png</value>
        <value>kodi_logo_light.png</value>
    </variable>
	
    <variable name="ThemeFontColorMidGrey">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FF686868</value>
    </variable>
    <variable name="ThemeFontColorDarkGrey">
		<value condition="Window.IsActive(Home) + Skin.String(GadgetRows, enhanced) + Skin.String(ColorTheme, white)">FF3e3e3e</value>
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FF3e3e3e</value>
    </variable>
	<variable name="ThemeFontColorBlack">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FF1b1b1b</value>
    </variable>
    <variable name="ThemeFontColorWhite">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FFfffeff</value>
    </variable>
	<variable name="ThemeFontColorBBWhite">
        <value condition="!Skin.HasTheme(classic)">bbwhite</value>
        <value>black</value>
    </variable>
	
	<variable name="ThemeFontColorBlueGrey">
        <value condition="!Skin.HasTheme(classic)">cc00b8ff</value>
        <value>FF3e3e3e</value>
    </variable>
	
	

	<variable name="WatchedImage">
		<value condition="Window.IsActive(Home) + Control.IsVisible(510) + StringCompare(ListItem.Overlay,OverlayWatched.png)">overlays/big/OverlayWatched.png</value>
		<value condition="Window.IsActive(Home) + Control.IsVisible(510) + [ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]">overlays/big/OverlayUnWatched.png</value>
		<value condition="SubString(ListItem.Path,videodb://movies/sets/) + !SubString(ListItem.label,..,left)">overlays/big/OverlayBoxSet.png</value>
		<value condition="container.content(seasons) + StringCompare(ListItem.Property(UnWatchedEpisodes),0)">overlays/big/OverlayWatched.png</value>
		<value condition="!Window.IsActive(Home) + container.content(albums)">-</value>
		<value condition="!Window.IsActive(Home) + SubString(ListItem.label,*)">overlays/big/OverlayUnWatched.png</value>
        <value condition="!Window.IsActive(Home) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | [[ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)] + !Skin.HasSetting(HideWatchedCounts)]]">overlays/big/$INFO[ListItem.Overlay]</value>
		
    </variable>
	
	<variable name="WatchedImageBanner">
		<value condition="container.content(seasons) + StringCompare(ListItem.Property(UnWatchedEpisodes),0)">overlays/big/OverlayWatched.png</value>
		<value condition="SubString(ListItem.label,*)">overlays/big/OverlayUnWatched.png</value>
        <value condition="[StringCompare(ListItem.Overlay,OverlayWatched.png) | [[ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)] + !Skin.HasSetting(HideWatchedCounts)]]">overlays/big/$INFO[ListItem.Overlay]</value>
    </variable>

	<variable name="WatchedLabel">
        <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | ListItem.IsFolder] + [IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0) + !Skin.HasSetting(HideWatchedCounts)]">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
		<value condition="ListItem.IsResumable + !Skin.HasSetting(HideWatchedCounts) + !StringCompare(ListItem.Overlay,OverlayWatched.png) + !IsEmpty(ListItem.Property(complete_percentage))">$INFO[ListItem.Property(complete_percentage)]%</value>
		<value condition="ListItem.IsResumable + !Skin.HasSetting(HideWatchedCounts) + !StringCompare(ListItem.Overlay,OverlayWatched.png)">$INFO[ListItem.PercentPlayed]%</value>
    </variable>
	

	<variable name="BannerImage">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
    </variable>
	
	<variable name="BannerImageFallback">
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!IsEmpty(FanArt.image)">$INFO[FanArt.image]</value>
		<value>$INFO[ListItem.Thumb]</value>
    </variable>
	
	<variable name="NowPlayingTitle">
        <value condition="IsEmpty(MusicPlayer.Artist) + IsEmpty(MusicPlayer.Title) + Player.IsInternetStream">$INFO[Window(Home).Property(streamtitle)]</value>
		<value condition="IsEmpty(MusicPlayer.Artist) + !IsEmpty(MusicPlayer.Title) + Player.HasAudio + !Player.IsInternetStream">$INFO[Window(Home).Property(streamtitle)] - $INFO[MusicPlayer.Title]</value>
		<value condition="!IsEmpty(MusicPlayer.Artist) + Player.HasAudio + !Player.IsInternetStream">$INFO[MusicPlayer.Artist] - $INFO[MusicPlayer.Title]</value>
		<value condition="!IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle] - S$INFO[VideoPlayer.Season]E$INFO[VideoPlayer.Episode] - $INFO[VideoPlayer.Title]</value>
		<value condition="!IsEmpty(MusicPlayer.Title) + Player.HasAudio + Player.IsInternetStream">$INFO[MusicPlayer.Title]</value>
        <value>$INFO[Player.Title]</value>
    </variable>
	
	<variable name="NowPlayingLabel">
        <value condition="Player.IsInternetStream">[B]$LOCALIZE[31040][/B]</value>
        <value>[B]$LOCALIZE[31040][/B]  ($INFO[Player.Time] / $INFO[Player.Duration])</value>
    </variable>
	
	<variable name="Details">
    <value condition="!Container.content(Addons) + Window.IsActive(MyPics.xml)">$INFO[ListItem.Date,, • ]$INFO[ListItem.Size]</value>
    <value condition="Container.content(Albums)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Artist]</value>
    <value condition="Container.Content(Episodes) + ListItem.Property(season_finale)">$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration, ,min. • ] $LOCALIZE[31336]</value>
	<value condition="Container.Content(Episodes) + ListItem.Property(series_finale)">$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration, ,min. • ] $LOCALIZE[31335]</value>
	<value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered,, • ]$INFO[ListItem.Duration, ,min.]</value>
    <value condition="Container.Content(Addons)">$INFO[ListItem.Property(Addon.Creator),$LOCALIZE[21863] : ]</value>
    <value condition="Container.Content(songs)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Genre,, • ]$INFO[ListItem.Album]</value>
    <value condition="Container.Content(Artists) + !IsEmpty(ListItem.Property(artist_genre))">$INFO[ListItem.Property(artist_genre),[COLOR=mainblue]$LOCALIZE[515]: [/COLOR]]</value>
    <value condition="Container.Content(Artists) + !IsEmpty(ListItem.Property(artist_style))">$INFO[ListItem.Property(artist_style),[COLOR=mainblue]$LOCALIZE[176]: [/COLOR]]</value>
    <value condition="Container.Content(MusicVideos)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration,, min.]</value>
	<value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Year),, • ]$INFO[Window(Home).Property(MovieSet.Genre)]</value>
    <value condition="Container.Content(Movies)">$INFO[ListItem.Year,, • ]$INFO[ListItem.Duration, , min.]$INFO[ListItem.Genre, • ]</value>
    <value condition="IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ] [COLOR=mainblue]$INFO[ListItem.Property(UnWatchedEpisodes), (,) ][/COLOR]</value>
    <value condition="!IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0) + [Container.Content(Seasons) | Container.Content(TVShows)]">$INFO[ListItem.Year,, • ]$INFO[ListItem.MPAA,, • ]$INFO[ListItem.Property(TotalEpisodes),$LOCALIZE[20360] • ]</value>
    <value condition="window.isactive(mypvrchannels.xml) + !IsEmpty(ListItem.ChannelName)">$INFO[ListItem.Title,, • ]$INFO[ListItem.StartTime]-$INFO[ListItem.EndTime]</value>
	<value condition="!IsEmpty(ListItem.ChannelName)">$INFO[ListItem.ChannelName,, • ]$INFO[ListItem.StartDate]</value>
	<value>$INFO[ListItem.Label2]</value>
  </variable>
  
  <variable name="Plots">
    <value condition="Container.content(addons) + !IsEmpty(ListItem.Property(Addon.Description))">$INFO[ListItem.Property(Addon.Description)]</value>
    <value condition="SubString(ListItem.Path,videodb://movies/sets/)">$INFO[Window(Home).Property(MovieSet.Plot)]</value>
    <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Plot) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Plot]</value>
	<value condition="Container.Content(Seasons) + !IsEmpty(Container.ShowPlot) + !IsEmpty(ListItem.Title)">$INFO[Container.ShowPlot]</value>
    <value condition="Container.Content(albums) + !IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
    <value condition="Container.Content(albums) + IsEmpty(ListItem.Property(Album_Description))">$LOCALIZE[414]</value>
    <value condition="Container.Content(artists) + !IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
    <value condition="Window.IsActive(MyPics.xml) + !IsEmpty(ListItem.PictureDesc)">$INFO[ListItem.PictureDesc]</value>
    <value condition="Window.IsActive(MyPics.xml) + !IsEmpty(ListItem.PictureComment)">$INFO[ListItem.PictureComment]</value>
    <value condition="Window.IsActive(MyPics.xml) + !IsEmpty(ListItem.PictureKeywords)">$INFO[ListItem.PictureKeywords]</value>
    <value condition="Window.IsActive(MyPics.xml)">[CR][COLOR=mainblue]$LOCALIZE[21821]:[/COLOR][CR]$LOCALIZE[416]</value>
    <value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
  </variable>
    
   <variable name="HomeButtonDownAction">
		<value condition="!IsEmpty(Window(Home).Property(activewidget)) + [Skin.String(GadgetRows, 2) + [StringCompare(Container(300).Position,1) | StringCompare(Container(300).Position,3) | StringCompare(Container(300).Position,5)]]">XBMC.RunScript(script.titanskin.helpers,SHOWWIDGET)</value>
		<value condition="!IsEmpty(Container(300).ListItem.Property(hasSubmenu)) + SubString(Container(300).ListItem.Property(hasSubmenu), True) + [IntegerGreaterThan(Container(4444).NumItems,0) | IntegerGreaterThan(Container(4445).NumItems,0)] + Skin.String(GadgetRows, 1)">Control.SetFocus(4444)</value>
		<value condition="!Skin.HasSetting(DisablePowerMenu)">ActivateWindow(ShutdownMenu)</value>
   </variable>
   
   <variable name="HomeButtonUpAction">
		<value condition="!IsEmpty(Window(Home).Property(activewidget)) + [[Skin.String(GadgetRows, 2) + [StringCompare(Container(300).Position,0) | StringCompare(Container(300).Position,2) | StringCompare(Container(300).Position,4)]] | Skin.String(GadgetRows, 1)]">XBMC.RunScript(script.titanskin.helpers,SHOWWIDGET)</value>
		<value condition="Skin.HasSetting(ShowProfile)">Control.SetFocus(891,0)</value>
   </variable>
   
   <variable name="EnhancedHomeButtonUpAction">
		<value condition="Control.IsVisible(4445)">SetFocus(4445)</value>
		<value condition="!IntegerGreaterThan(Container(4444).NumItems,0)">SetFocus(510)</value>
		<value>SetFocus(4444)</value>
   </variable>
  
    <variable name="ProfileLabel">
		<value condition="!Control.HasFocus(890)">$INFO[System.ProfileName]</value>
		<value condition="Control.HasFocus(890)">[B]$INFO[System.ProfileName][/B]</value>
   </variable>
   
   <variable name="actorImage">
		<value condition="!IsEmpty(Container(50).ListItem.Icon)">$INFO[Container(50).ListItem.Icon]</value>
		<value condition="!IsEmpty(ListItem.Art(characterart))">$INFO[ListItem.Art(characterart)]</value>
   </variable>
   
   
  
	  
   <variable name="VideoPlayerCover">
	<value condition="!IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
	<value condition="!IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
	<value condition="!IsEmpty(Player.Art(landscape))">$INFO[Player.Art(landscape)]</value>
	<value condition="!IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
	<value condition="!IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
	<value>$INFO[Player.Art(thumb)]</value>
   </variable>

   <variable name="ColorOverlayClick">
		<value condition="Skin.String(ColorTheme, Aquamarine)">Skin.SetString(ColorTheme, Ash)</value>
		<value condition="Skin.String(ColorTheme, Ash)">Skin.SetString(ColorTheme, BigRed)</value>
		<value condition="Skin.String(ColorTheme, BigRed)">Skin.SetString(ColorTheme, Black)</value>
		<value condition="Skin.String(ColorTheme, Black)">Skin.SetString(ColorTheme, Blue)</value>
		<value condition="Skin.String(ColorTheme, Blue)">Skin.SetString(ColorTheme, Brown)</value>
		<value condition="Skin.String(ColorTheme, Brown)">Skin.SetString(ColorTheme, Carbon)</value>
		<value condition="Skin.String(ColorTheme, Carbon)">Skin.SetString(ColorTheme, DarkBlue)</value>
		<value condition="Skin.String(ColorTheme, DarkBlue)">Skin.SetString(ColorTheme, Default)</value>
		<value condition="Skin.String(ColorTheme, Default)">Skin.SetString(ColorTheme, Frost)</value>
		<value condition="Skin.String(ColorTheme, Frost)">Skin.SetString(ColorTheme, Green)</value>
		<value condition="Skin.String(ColorTheme, Green)">Skin.SetString(ColorTheme, Grey)</value>
		<value condition="Skin.String(ColorTheme, Grey)">Skin.SetString(ColorTheme, Lemon)</value>
		<value condition="Skin.String(ColorTheme, Lemon)">Skin.SetString(ColorTheme, Light)</value>
		<value condition="Skin.String(ColorTheme, Light)">Skin.SetString(ColorTheme, OceanBlue)</value>
		<value condition="Skin.String(ColorTheme, OceanBlue)">Skin.SetString(ColorTheme, Olive)</value>
		<value condition="Skin.String(ColorTheme, Olive)">Skin.SetString(ColorTheme, Pink)</value>
		<value condition="Skin.String(ColorTheme, Pink)">Skin.SetString(ColorTheme, Purple)</value>
		<value condition="Skin.String(ColorTheme, Purple)">Skin.SetString(ColorTheme, Red)</value>
		<value condition="Skin.String(ColorTheme, Red)">Skin.SetString(ColorTheme, SkyBlue)</value>
		<value condition="Skin.String(ColorTheme, SkyBlue)">Skin.SetString(ColorTheme, Spearmint)</value>
		<value condition="Skin.String(ColorTheme, Spearmint)">Skin.SetString(ColorTheme, Tangerine)</value>
		<value condition="Skin.String(ColorTheme, Tangerine)">Skin.SetString(ColorTheme, Violet)</value>
		<value condition="Skin.String(ColorTheme, Violet)">Skin.SetString(ColorTheme, White)</value>
		<value condition="Skin.String(ColorTheme, White)">Skin.SetString(ColorTheme, Winter1)</value>
		<value condition="Skin.String(ColorTheme, Winter1)">Skin.SetString(ColorTheme, Winter2)</value>
		<value condition="Skin.String(ColorTheme, Winter2)">Skin.SetString(ColorTheme, Custom)</value>
		<value condition="Skin.String(ColorTheme, Custom)">Skin.SetString(ColorTheme, None)</value>
		<value condition="Skin.String(ColorTheme, None)">Skin.SetString(ColorTheme, Aquamarine)</value>
		<value condition="Skin.String(ColorTheme, Dark)">Skin.SetString(ColorTheme, Aquamarine)</value>
   </variable>
     
   <variable name="customLibraryLabel">
		<value condition="SubString(ListItem.Label,MediaBrowser.usr.)">$LOCALIZE[24125]</value>
		<value condition="StringCompare(ListItem.Label, $LOCALIZE[231]) + StringCompare(Window(Home).Property(shortcutDialog), background)">$LOCALIZE[31027]</value>
		<value>$INFO[ListItem.Label]</value>
   </variable>

	 
	 <variable name="splashScreenImage">
		 <value condition="Skin.String(LoginBackground)">$INFO[Skin.String(LoginBackground)]</value>
		 <value>special://skin/extras/backgrounds/splashscreen.jpg</value>
	 </variable>
	 
	 <variable name="OSDInfoImage">
		<value condition="!IsEmpty(Player.Art(clearart))">$INFO[Player.Art(clearart)]</value>
		<value condition="!IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	 </variable>
	 
	 <variable name="OSDImage">
		<value condition="!IsEmpty(ListItem.Property(small_poster))">$INFO[ListItem.Property(small_poster)]</value>
		<value condition="!IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!IsEmpty(VideoPlayer.Cover)">$INFO[VideoPlayer.Cover]</value>
	 </variable>
	 
	 <variable name="NextAiredLabel">
		<value condition="StringCompare(System.Date(ddd),ListItem.Property(day))">$INFO[ListItem.Label] *</value>
		<value>$INFO[ListItem.Label]</value>
	 </variable>
	 
	 <variable name="PlayerActionLabel">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekTime] - $INFO[Player.Duration]</value>
		<value condition="player.forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="player.forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="player.forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="player.forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="player.forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="player.rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="player.rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="player.rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="player.rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="player.rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="!IsEmpty(player.FinishTime)">$LOCALIZE[31112] $INFO[Player.FinishTime]</value>
	 </variable>
	 
	 <variable name="PlayerActionLabelLarge">
		<value condition="[Player.Paused + Player.Caching] + !Player.Seeking">[B]$LOCALIZE[15107]:[/B] $INFO[Player.CacheLevel]%</value>
		<value condition="!IsEmpty(Player.SeekStepSize) + ![player.forwarding | player.rewinding]">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekStepSize]</value>
		<value condition="Player.DisplayAfterSeek + ![player.forwarding | player.rewinding]">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekOffset]</value>
		<value condition="Player.seeking">[B]$LOCALIZE[31255][/B] $INFO[Player.SeekTime] - $INFO[Player.Duration]</value>
		<value condition="player.forwarding2x">[B]$LOCALIZE[31253][/B] x2</value>
		<value condition="player.forwarding4x">[B]$LOCALIZE[31253][/B] x4</value>
		<value condition="player.forwarding8x">[B]$LOCALIZE[31253][/B] x8</value>
		<value condition="player.forwarding16x">[B]$LOCALIZE[31253][/B] x16</value>
		<value condition="player.forwarding32x">[B]$LOCALIZE[31253][/B] x32</value>
		<value condition="player.rewinding2x">[B]$LOCALIZE[31254][/B] x2</value>
		<value condition="player.rewinding4x">[B]$LOCALIZE[31254][/B] x4</value>
		<value condition="player.rewinding8x">[B]$LOCALIZE[31254][/B] x8</value>
		<value condition="player.rewinding16x">[B]$LOCALIZE[31254][/B] x16</value>
		<value condition="player.rewinding32x">[B]$LOCALIZE[31254][/B] x32</value>
		<value condition="player.paused">[B]$LOCALIZE[31251][/B]</value>
	 </variable>
	 
	 <variable name="ClearLogoLocation">
		<value condition="Skin.String(ClearLogoLocation, footer)">$LOCALIZE[31328]</value>
		<value condition="Skin.String(ClearLogoLocation, topleft)">$LOCALIZE[31329]</value>
		<value condition="Skin.String(ClearLogoLocation, topcenter)">$LOCALIZE[31330]</value>
		<value condition="Skin.String(ClearLogoLocation, topright)">$LOCALIZE[31331]</value>
		<value condition="!Skin.String(ClearLogoLocation)">$LOCALIZE[1223]</value>
	 </variable>
	 
	 <variable name="SubtitleButton">
		<value condition="!VideoPlayer.SubtitlesEnabled">$LOCALIZE[24022]</value>
		<value>$LOCALIZE[209]</value>
	 </variable>
	 
</includes>
