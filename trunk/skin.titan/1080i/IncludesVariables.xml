<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
    <!-- ====== -->
    <!-- Header -->
    <!-- ====== -->
    <variable name="value_header">
        <value condition="Window.IsActive(Home.xml) + !Skin.HasSetting(WeatherOnHome)">[UPPERCASE]$LOCALIZE[10000][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,Radio)">[UPPERCASE]$LOCALIZE[19021][/UPPERCASE]</value>
        <value condition="Container.Content(movies) + IsEmpty(ListItem.Title)">[UPPERCASE]$LOCALIZE[342][/UPPERCASE]</value>
        <value condition="Container.Content(movies) + !IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
        <value condition="Container.Content(tvshows)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
        <value condition="Container.Content(seasons) + !IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343]: $INFO[ListItem.TVShowTitle][/UPPERCASE]</value>
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343]: $INFO[ListItem.TVShowTitle] - $LOCALIZE[20373] $INFO[ListItem.Season][/UPPERCASE]</value>
        <value condition="Container.Content(seasons) + IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
        <value condition="Container.Content(episodes) + IsEmpty(ListItem.TVShowTitle)">[UPPERCASE]$LOCALIZE[20343][/UPPERCASE]</value>
        <value condition="Container.Content(genres)">[UPPERCASE]$LOCALIZE[515][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,plugin://plugin.video.netflixbmc)">[UPPERCASE]$LOCALIZE[31018][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,plugin://plugin.video.youtube)">[UPPERCASE]$LOCALIZE[31062][/UPPERCASE]</value>
        <value condition="substring(Container.FolderPath,plugin://plugin.video.xbmb3c)">[UPPERCASE]$LOCALIZE[31091][/UPPERCASE]</value>
        <value condition="![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(genres)] + Window.IsActive(MyVideoNav.xml)">[UPPERCASE]$LOCALIZE[157]- $LOCALIZE[1214][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicNav.xml)">[UPPERCASE]$LOCALIZE[2][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyWeather.xml)">[UPPERCASE]$LOCALIZE[8][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPics.xml)">[UPPERCASE]$LOCALIZE[1213][/UPPERCASE]</value>
        <value condition="Window.IsActive(AddonBrowser.xml)">[UPPERCASE]$LOCALIZE[10040][/UPPERCASE]</value>
        <value condition="Window.IsActive(FileManager.xml)">[UPPERCASE]$LOCALIZE[10003][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicPlaylist.xml)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[559][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicSongs.xml)">[UPPERCASE]$LOCALIZE[2]-$LOCALIZE[1214][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPrograms.xml)">[UPPERCASE]$LOCALIZE[10001][/UPPERCASE]</value>
        <value condition="Window.IsActive(Settings.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SkinSettings.xml)">SKIN [UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SettingsCategory.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(SettingsSystemInfo.xml)">[UPPERCASE]$LOCALIZE[5][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyPVR.xml)">[UPPERCASE]$LOCALIZE[31088][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">[UPPERCASE]$LOCALIZE[10503][/UPPERCASE]</value>--&gt;
	</variable>
    <variable name="value_header_icon">
        <value condition="Window.IsActive(Home.xml) + !Skin.HasSetting(WeatherOnHome)">icons/icon_home.png</value>
        <value condition="Container.Content(movies)">icons/icon_movies.png</value>
        <value condition="Container.Content(tvshows)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(seasons)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(episodes)">icons/icon_tvshows.png</value>
        <value condition="Container.Content(genres)">icons/icon_movies.png</value>
        <value condition="![Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(genres)] + Window.IsActive(MyVideoNav.xml)">icons/icon_movies.png</value>
        <value condition="Window.IsActive(MyMusicNav.xml)">icons/icon_music.png</value>
        <value condition="Window.IsActive(MyWeather.xml)">icons/icon_weather.png</value>
        <value condition="Window.IsActive(MyPics.xml)">icons/icon_pictures.png</value>
        <value condition="Window.IsActive(AddonBrowser.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(FileManager.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(MyMusicPlaylist.xml)">icons/icon_music.png</value>
        <value condition="Window.IsActive(MyMusicSongs.xml)">icons/icon_music.png</value>
        <value condition="Window.IsActive(MyPrograms.xml)">icons/icon_addons.png</value>
        <value condition="Window.IsActive(Settings.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SkinSettings.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SettingsCategory.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(SettingsSystemInfo.xml)">icons/icon_settings.png</value>
        <value condition="Window.IsActive(MyPVR.xml)">icons/icon_tvshows.png</value>
        <value condition="Window.IsActive(MyMusicPlaylistEditor.xml)">icons/icon_music.png</value>
    </variable>
    <!-- ========== -->
    <!-- List Label -->
    <!-- ========== -->
    <variable name="value_list_label_1">
        <value condition="!Container.Content(albums)">$INFO[ListItem.Label]</value>
        <value condition="Container.Content(albums)">$INFO[ListItem.Label2] - $INFO[ListItem.Label]</value>
    </variable>
    <variable name="value_list_label_2">
        <value condition="[Container.Content(movies) | Container.Content(musicvideos)] + ![SubString(ListItem.Duration,min) | SubString(ListItem.Path,videodb://1/7,left)]">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] min - [COLOR=list_label_2_first]$LOCALIZE[20339]: [/COLOR] $INFO[ListItem.Director]</value>
        <value condition="[Container.Content(movies) | Container.Content(musicvideos)] + SubString(ListItem.Duration,min) + !SubString(ListItem.Path,videodb://1/7,left)">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] - [COLOR=list_label_2_first]$LOCALIZE[20339]: [/COLOR] $INFO[ListItem.Director]</value>
        <value condition="SubString(ListItem.Path,videodb://1/7,left)">[COLOR=list_label_2_first]$LOCALIZE[20457][/COLOR]</value>
        <!-- Movie Sets -->
        <value condition="Container.Content(tvshows) + !IsEmpty(ListItem.Episode)">[COLOR=list_label_2_first]$LOCALIZE[20360]: [/COLOR]$INFO[ListItem.Episode]  - [COLOR=list_label_2_first]$LOCALIZE[16101]: [/COLOR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
        <value condition="Container.Content(seasons) + !IsEmpty(ListItem.Episode)">[COLOR=list_label_2_first]$INFO[ListItem.TVShowTitle][/COLOR] - [COLOR=list_label_2_first]$LOCALIZE[20360]: [/COLOR]$INFO[ListItem.Property(TotalEpisodes)] - [COLOR=list_label_2_first]$LOCALIZE[16101]: [/COLOR]$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
        <value condition="Container.Content(episodes) + !SubString(ListItem.Duration,min)">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] min - [COLOR=list_label_2_first]$INFO[ListItem.TVShowTitle][/COLOR]</value>
        <value condition="Container.Content(episodes) + SubString(ListItem.Duration,min)">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] - [COLOR=list_label_2_first]$INFO[ListItem.TVShowTitle][/COLOR]</value>
        <value condition="Container.Content(artists)">[COLOR=list_label_2_first]$LOCALIZE[21898]: [/COLOR]$INFO[ListItem.Property(Artist_YearsActive)]</value>
        <!-- YearsActive/Artists -->
        <value condition="Container.Content(songs) + !SubString(ListItem.Duration,min)">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration] min</value>
        <value condition="Container.Content(songs) + SubString(ListItem.Duration,min)">[COLOR=list_label_2_first]$LOCALIZE[180]: [/COLOR] $INFO[ListItem.Duration]</value>
        <value condition="Container.Content(addons) + !IsEmpty(ListItem.Property(Addon.Version)) + IsEmpty(ListItem.Label2)">[COLOR=list_label_2_first]$LOCALIZE[24051] [/COLOR]$INFO[ListItem.Property(Addon.Version)] - [COLOR=list_label_2_first]$LOCALIZE[21863]: [/COLOR]$INFO[ListItem.Property(Addon.Creator)]</value>
        <value condition="Container.Content(addons) + !IsEmpty(ListItem.Property(Addon.Version)) + !IsEmpty(ListItem.Label2)">[COLOR=list_label_2_first]$LOCALIZE[24051] [/COLOR]$INFO[ListItem.Property(Addon.Version)] - [COLOR=list_label_2_first]$LOCALIZE[21863]: [/COLOR]$INFO[ListItem.Property(Addon.Creator)] - [COLOR=list_label_2_first]$INFO[ListItem.Label2][/COLOR]</value>
    </variable>
    <!-- =============== -->
    <!-- Additional Info -->
    <!-- =============== -->
    <variable name="value_ground1_label">
        <!-- Land / Premiere -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[21875] :</value>
        <!-- Land -->
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">Premiere :</value>
        <!-- Premiere -->
    </variable>
    <variable name="value_ground1_value">
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Country]</value>
        <value condition="Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Premiered]</value>
    </variable>
    <variable name="value_ground2_label">
        <!-- Genre / Regie -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$LOCALIZE[515] :</value>
        <!-- Genre -->
        <value condition="Container.Content(episodes)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
    </variable>
    <variable name="value_ground2_value">
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) | Container.Content(tvshows) | Container.Content(seasons)">$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(episodes)">$INFO[ListItem.Director]</value>
    </variable>
    <variable name="value_ground3_label">
        <!-- Studio -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$LOCALIZE[20388] :</value>
        <!-- Studio -->
    </variable>
    <variable name="value_ground3_value">
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos) |  Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)">$INFO[ListItem.Studio]</value>
    </variable>
    <variable name="value_ground4_label">
        <!-- Regie / Episodes (counter) / Duration -->
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$LOCALIZE[20339] :</value>
        <!-- Regie -->
        <value condition="Container.Content(tvshows)">$LOCALIZE[20360] :</value>
        <!-- Episodes -->
        <value condition="Container.Content(episodes)">$LOCALIZE[180] :</value>
        <!-- Duration -->
    </variable>
    <variable name="value_ground4_value">
        <value condition="Container.Content(movies) | Window.IsVisible(VideoPlaylist) | Container.Content(musicvideos)">$INFO[ListItem.Director]</value>
        <value condition="Container.Content(tvshows)">$INFO[ListItem.Property(TotalEpisodes)] ($LOCALIZE[16101]: $INFO[ListItem.Property(UnwatchedEpisodes)])</value>
        <value condition="Container.Content(episodes) + !SubString(ListItem.Duration,min)">$INFO[ListItem.Duration] min</value>
        <value condition="Container.Content(episodes) + SubString(ListItem.Duration,min)">$INFO[ListItem.Duration]</value>
    </variable>
    <variable name="MusicButtonThumb">
        <value condition="!Skin.String(CustomMusicFolder, artwork)">$INFO[Skin.String(CustomMusicFolder)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + Skin.HasSetting(HomeMenuUseMBforMusic)">$INFO[Window.Property(MB3.Background.Music.FanArt)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusic) + !IsEmpty(Window(Home).Property(RandomArtist.1.FanArt))">$INFO[Window(Home).Property(RandomArtist.1.FanArt)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusic) + IsEmpty(Window(Home).Property(RandomArtist.1.FanArt))">$INFO[Window(Home).Property(RandomArtist.2.FanArt)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusic) + IsEmpty(Window(Home).Property(RandomArtist.2.FanArt))">$INFO[Window(Home).Property(RandomArtist.3.FanArt)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusic) + IsEmpty(Window(Home).Property(RandomArtist.3.FanArt))">$INFO[Window(Home).Property(RandomArtist.4.FanArt)]</value>
        <value condition="Skin.String(CustomMusicFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusic) + IsEmpty(Window(Home).Property(RandomArtist.4.FanArt))">$INFO[Window(Home).Property(RandomArtist.5.FanArt)]</value>
    </variable>
    <variable name="MoviesButtonThumb">
        <value condition="!Skin.String(CustomMoviesFolder, artwork)">$INFO[Skin.String(CustomMoviesFolder)]</value>
        <value condition="Skin.String(CustomMoviesFolder, artwork) + Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(MB3.Background.Movie.FanArt)]</value>
        <value condition="Skin.String(CustomMoviesFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window(Home).Property(RandomMovie.2.Art(fanart))]</value>
    </variable>
    <variable name="TvseriesButtonThumb">
        <value condition="!Skin.String(CustomTVShowsFolder, artwork)">$INFO[Skin.String(CustomTVShowsFolder)]</value>
        <value condition="Skin.String(CustomTVShowsFolder, artwork) + Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(MB3.Background.TV.FanArt)]</value>
        <value condition="Skin.String(CustomTVShowsFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window(Home).Property(RandomEpisode.2.Art(tvshow.fanart))]</value>
    </variable>
    <variable name="MusicVideosButtonThumb">
        <value condition="!Skin.String(CustomMusicVideosFolder, artwork)">$INFO[Skin.String(CustomMusicVideosFolder)]</value>
        <value condition="Skin.String(CustomMusicVideosFolder, artwork) + Skin.HasSetting(HomeMenuUseMBforMusicVideos)">$INFO[Window(Home).Property(xbmb3c.std.music.3.image)]</value>
        <value condition="Skin.String(CustomMusicVideosFolder, artwork) + !Skin.HasSetting(HomeMenuUseMBforMusicVideos)">$INFO[Window(Home).Property(RandomMusicVideo.1.Fanart)]</value>
    </variable>
    <variable name="WeatherButtonThumb">
        <value condition="!Skin.String(CustomWeatherFolder, artwork)">$INFO[Skin.String(CustomWeatherFolder)]</value>
        <value condition="Skin.String(CustomWeatherFolder, artwork)">special://skin/extras/weather/$INFO[Weather.FanartCode]/weather.jpg</value>
    </variable>
    <variable name="WeatherButtonLabel">
        <value condition="!Skin.HasSetting(WeatherButtonDisplayTemp)">$LOCALIZE[24027]</value>
        <value condition="Skin.HasSetting(WeatherButtonDisplayTemp)">$INFO[Window(Weather).Property(Day0.HighTemp)] $INFO[System.TemperatureUnits][COLOR=mainblue] / $INFO[Window(Weather).Property(Day0.LowTemp)] $INFO[System.TemperatureUnits] [/COLOR]</value>
    </variable>
    <variable name="PicturesButtonThumb">
        <value condition="!Skin.String(CustomPicturesFolder, artwork)">$INFO[Skin.String(CustomPicturesFolder)]</value>
        <value condition="Skin.String(CustomPicturesFolder, artwork) + Skin.HasSetting(MediaBrowserMode)">$VAR[randompicturegenerate]</value>
    </variable>
    <variable name="randompicturegenerate">
        <value condition="IntegerGreaterThan(System.Time(mm), 55)">$INFO[Window.Property(LatestPhotoMB3.6.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 50)">$INFO[Window.Property(LatestPhotoMB3.7.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 45)">$INFO[Window.Property(LatestPhotoMB3.2.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 40)">$INFO[Window.Property(LatestPhotoMB3.9.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 35)">$INFO[Window.Property(LatestPhotoMB3.8.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 30)">$INFO[Window.Property(LatestPhotoMB3.2.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 25)">$INFO[Window.Property(LatestPhotoMB3.6.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 20)">$INFO[Window.Property(LatestPhotoMB3.4.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 15)">$INFO[Window.Property(LatestPhotoMB3.5.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 10)">$INFO[Window.Property(LatestPhotoMB3.3.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 5)">$INFO[WindowProperty(LatestPhotoMB3.2.Thumb)]</value>
        <value condition="IntegerGreaterThan(System.Time(mm), 1)">$INFO[Window.Property(LatestPhotoMB3.1.Thumb)]</value>
    </variable>
    <variable name="Custom0Background">
        <value condition="!Skin.String(Custom0Background)">$INFO[Window(Home).Property(xbmb3c.usr.movies.0.image)]</value>
        <value condition="Skin.String(Custom0Background)">$INFO[Skin.String(Custom0Background)]</value>
    </variable>
    <variable name="Custom1Background">
        <value condition="!Skin.String(Custom0Background)">$INFO[Window(Home).Property(xbmb3c.usr.movies.1.image)]</value>
        <value condition="Skin.String(Custom1Background)">$INFO[Skin.String(Custom1Background)]</value>
    </variable>
    <variable name="Custom2Background">
        <value condition="!Skin.String(Custom2Background)">$INFO[Window(Home).Property(xbmb3c.usr.movies.2.image)]</value>
        <value condition="Skin.String(Custom2Background)">$INFO[Skin.String(Custom2Background)]</value>
    </variable>
    <variable name="Custom3Background">
        <value condition="!Skin.String(Custom3Background)">$INFO[Window(Home).Property(xbmb3c.usr.movies.3.image)]</value>
        <value condition="Skin.String(Custom3Background)">$INFO[Skin.String(Custom3Background)]</value>
    </variable>
    <variable name="Custom4Background">
        <value condition="!Skin.String(Custom4Background)">$INFO[Window(Home).Property(xbmb3c.usr.movies.4.image)]</value>
        <value condition="Skin.String(Custom4Background)">$INFO[Skin.String(Custom4Background)]</value>
    </variable>
    <variable name="Custom5Background">
        <value condition="!Skin.String(Custom5Background)">$INFO[Window(Home).Property(xbmb3c.usr.tvshows.0.image)]</value>
        <value condition="Skin.String(Custom5Background)">$INFO[Skin.String(Custom5Background)]</value>
    </variable>
    <variable name="Custom6Background">
        <value condition="!Skin.String(Custom6Background)">$INFO[Window(Home).Property(xbmb3c.usr.tvshows.1.image)]</value>
        <value condition="Skin.String(Custom6Background)">$INFO[Skin.String(Custom6Background)]</value>
    </variable>
    <variable name="Custom7Background">
        <value condition="!Skin.String(Custom7Background)">$INFO[Window(Home).Property(xbmb3c.usr.tvshows.2.image)]</value>
        <value condition="Skin.String(Custom7Background)">$INFO[Skin.String(Custom7Background)]</value>
    </variable>
    <variable name="Custom8Background">
        <value condition="!Skin.String(Custom8Background)">$INFO[Window(Home).Property(xbmb3c.usr.tvshows.3.image)]</value>
        <value condition="Skin.String(Custom8Background)">$INFO[Skin.String(Custom8Background)]</value>
    </variable>
    <variable name="Custom9Background">
        <value condition="!Skin.String(Custom9Background)">$INFO[Window(Home).Property(xbmb3c.usr.tvshows.4.image)]</value>
        <value condition="Skin.String(Custom9Background)">$INFO[Skin.String(Custom9Background)]</value>
    </variable>
    <variable name="Custom10Background">
        <value condition="!Skin.String(Custom10Background)">$INFO[Window(Home).Property(xbmb3c.usr.music.0.image)]</value>
        <value condition="Skin.String(Custom10Background)">$INFO[Skin.String(Custom10Background)]</value>
    </variable>
    <variable name="Custom11Background">
        <value condition="!Skin.String(Custom11Background)">$INFO[Window(Home).Property(xbmb3c.usr.music.1.image)]</value>
        <value condition="Skin.String(Custom11Background)">$INFO[Skin.String(Custom11Background)]</value>
    </variable>
    <variable name="Custom12Background">
        <value condition="!Skin.String(Custom12Background)">$INFO[Window(Home).Property(xbmb3c.usr.music.2.image)]</value>
        <value condition="Skin.String(Custom12Background)">$INFO[Skin.String(Custom12Background)]</value>
    </variable>
    <variable name="Custom13Background">
        <value condition="!Skin.String(Custom13Background)">$INFO[Window(Home).Property(xbmb3c.usr.music.3.image)]</value>
        <value condition="Skin.String(Custom13Background)">$INFO[Skin.String(Custom13Background)]</value>
    </variable>
    <variable name="Custom14Background">
        <value condition="!Skin.String(Custom14Background)">$INFO[Window(Home).Property(xbmb3c.usr.music.4.image)]</value>
        <value condition="Skin.String(Custom14Background)">$INFO[Skin.String(Custom14Background)]</value>
    </variable>
    <variable name="MB3FavoritesBackground">
        <value condition="!Skin.String(MB3FavoritesBackground)">$INFO[Window(Home).Property(xbmb3c.std.movies.3.image)]</value>
        <value condition="Skin.String(MB3FavoritesBackground)">$INFO[Skin.String(MB3FavoritesBackground)]</value>
    </variable>
    <variable name="MB3ChannelsBackground">
        <value condition="!Skin.String(MB3ChannelsBackground)">$INFO[Window(Home).Property(xbmb3c.std.channels.0.image)]</value>
        <value condition="Skin.String(MB3ChannelsBackground)">$INFO[Skin.String(MB3ChannelsBackground)]</value>
    </variable>
    <variable name="MusicButtonOnClick">
        <value condition="Skin.String(HomeMenuUseMusicCollection)">ActivateWindow(Music, $INFO[Skin.String(HomeMenuUseMusicCollection)], return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMusicSubmenu) + !Skin.String(HomeMenuUseMusicCollection)">ActivateWindow(1234)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMusic) + !Skin.String(HomeMenuUseMusicCollection) + !Skin.HasSetting(HomeMenuUseMusicSubmenu)">ActivateWindow(Music, MusicLibrary, return)</value>
        <value condition="Skin.HasSetting(MediaBrowserMode) + !Skin.String(HomeMenuUseMusicCollection) + !Skin.HasSetting(HomeMenuUseMusicSubmenu)">$INFO[Window.Property(xbmb3c.std.music.0.path)]</value>
    </variable>
    <variable name="NetflixButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixSubmenu)">ActivateWindow(1238)</value>
        <value>ActivateWindow(10025,"plugin://plugin.video.netflixbmc",return)</value>
    </variable>
    <variable name="MoviesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=movie&amp;url",return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMoviesSubmenu)">ActivateWindow(1237)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMoviesSubmenu) + !Skin.HasSetting(HomeMenuUseMBforMovies)">ActivateWindow(Video,movietitles,return)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMoviesSubmenu) + Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(xbmb3c.std.movies.0.path)]</value>
    </variable>
    <variable name="TVseriesButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">ActivateWindow(10025,"plugin://plugin.video.netflixbmc/?mode=main&amp;thumb&amp;type=tv&amp;url",return)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforTVseries)">ActivateWindow(Video,tvshowtitles,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(xbmb3c.std.tvshows.0.path)]</value>
    </variable>
    <variable name="RadioButtonOnClick">
        <value condition="Skin.String(HomeMenuUseRadioCollection)">ActivateWindow(Music,$INFO[Skin.String(HomeMenuUseRadioCollection)], return)</value>
        <value condition="!Skin.String(HomeMenuUseRadioCollection)">ActivateWindowAndFocus(MyPVR, 33,0, 10,0)</value>
    </variable>
    <variable name="PicturesButtonOnClick">
        <value condition="!Skin.HasSetting(HomeMenuUseMBforPictures)">ActivateWindow(pictures,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforPictures)">$INFO[Window.Property(xbmb3c.std.photo.0.path)]</value>
    </variable>
    <variable name="MusicVideosButtonOnClick">
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMusicVideos)">ActivateWindow(Video,MusicVideoTitles ,return)</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMusicVideos)">$INFO[Window.Property(xbmb3c.std.music.3.path)]</value>
    </variable>
    <variable name="LiveTVButtonOnClick">
        <value condition="Skin.HasSetting(HomeMenuUseGuideOnTV)">ActivateWindowAndFocus(MyPVR, 31,0, 10,0)</value>
        <value condition="!Skin.HasSetting(HomeMenuUseGuideOnTV)">ActivateWindowAndFocus(MyPVR, 32,0, 11,0)</value>
    </variable>
    <variable name="LatestMoviesNextUp">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=movie&amp;url=http%3a%2f%2fwww.netflix.com%2fWiRecentAdditionsGallery%3fnRR%3dreleaseDate%26nRT%3dall%26pn%3d1%26np%3d1%26actionMethod%3djson</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(xbmb3c.std.movies.1.content)]</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforMovies)">videodb://recentlyaddedmovies/</value>
    </variable>
    <variable name="MoviesInProgressNextUp">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforMovies)">plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=movie&amp;url=http%3a%2f%2fwww.netflix.com%2fMyList</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforMovies)">$INFO[Window.Property(xbmb3c.std.movies.2.content)]</value>
    </variable>
    <variable name="EpisodesNextUpLabel">
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$LOCALIZE[31043]</value>
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">$LOCALIZE[20387]</value>
        <value>$LOCALIZE[20387]</value>
    </variable>
    <variable name="EpisodesNextUp">
        <value condition="Skin.HasSetting(HomeMenuUseNetflixforTVseries)">plugin://plugin.video.netflixbmc/?mode=listVideos&amp;thumb&amp;type=tv&amp;url=http%3a%2f%2fwww.netflix.com%2fWiRecentAdditionsGallery%3fnRR%3dreleaseDate%26nRT%3dall%26pn%3d1%26np%3d1%26actionMethod%3djson</value>
        <value condition="Skin.HasSetting(HomeMenuUseMBforTVseries)">$INFO[Window.Property(xbmb3c.std.tvshows.3.content)]</value>
        <value condition="!Skin.HasSetting(HomeMenuUseMBforTVseries)">videodb://recentlyaddedepisodes/</value>
    </variable>
    <variable name="BannerFanArtImage">
        <value condition="Container.Content(Seasons) + !IsEmpty(ListItem.Art(season.fanart)) + !substring(Container.FolderPath,plugin://plugin.video)">$INFO[ListItem.Art(season.fanart)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
    <variable name="BannerLandscapeImage">
		<value condition="!IsEmpty(ListItem.Thumb) + Container.Content(Episodes)">$INFO[ListItem.Thumb]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>$INFO[ListItem.Thumb]</value>
    </variable>
	<variable name="BannerLandscapeImageSeason">
        <value condition="Container.Content(Seasons) + IsEmpty(ListItem.Art(landscape)) + IntegerIsGreaterThan(ListItem.Season, 9)">$INFO[ListItem.Path]$INFO[ListItem.Season,season,-landscape.jpg]</value>
        <value condition="Container.Content(Seasons) + IsEmpty(ListItem.Art(landscape)) + !IntegerIsGreaterThan(ListItem.Season, 9)">$INFO[ListItem.Path]$INFO[ListItem.Season,season0,-landscape.jpg]</value>
    </variable>
	
	<variable name="View_Item_Header">
		<value condition="Container.Content(episodes) + SubString(Container.FolderPath,recentlyaddedepisodes) + !IntegerGreaterThan(ListItem.Season, 10) + !IntegerGreaterThan(ListItem.Episode, 10)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E0,] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(episodes) + SubString(Container.FolderPath,recentlyaddedepisodes) + !IntegerGreaterThan(ListItem.Season, 10) + IntegerGreaterThan(ListItem.Episode, 10)">$INFO[ListItem.Season,S0,]$INFO[ListItem.Episode,E,] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(episodes) + SubString(Container.FolderPath,recentlyaddedepisodes) + IntegerGreaterThan(ListItem.Season, 10) + !IntegerGreaterThan(ListItem.Episode, 10)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E0,] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(episodes) + SubString(Container.FolderPath,recentlyaddedepisodes) + IntegerGreaterThan(ListItem.Season, 10) + IntegerGreaterThan(ListItem.Episode, 10)">$INFO[ListItem.Season,S,]$INFO[ListItem.Episode,E,] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Episode,,.] $INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.TrackNumber,,.] $INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>	
	
	<variable name="View_Item_Description">
		<value condition="!IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
		<value condition="!IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>Description not available</value>
	</variable>
	
    <variable name="ThemeFontColorMidGrey">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FF686868</value>
    </variable>
    <variable name="ThemeFontColorDarkGrey">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FF3e3e3e</value>
    </variable>
    <variable name="ThemeFontColorWhite">
        <value condition="!Skin.HasTheme(classic)">FFfffeff</value>
        <value>FFfffeff</value>
    </variable>
	
	<variable name="WatchedImage">
		<value condition="!Skin.HasTheme(classic) + !Control.IsVisible(50) + SubString(ListItem.label,*)">overlays/big/OverlayUnWatched.png</value>
		<value condition="Skin.HasTheme(classic) + !Control.IsVisible(50) + SubString(ListItem.label,*)">overlays/rounded/OverlayUnWatched.png</value>
        <value condition="!Skin.HasTheme(classic) + !Control.IsVisible(50) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]">overlays/big/$INFO[ListItem.Overlay]</value>
		<value condition="Skin.HasTheme(classic) + !Control.IsVisible(50) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]">overlays/rounded/$INFO[ListItem.Overlay]</value>
		<value condition="Control.IsVisible(50) + [StringCompare(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]">overlays/small/$INFO[ListItem.Overlay]</value>
    </variable>
	
	<variable name="WatchedImageBanner">
		<value condition="SubString(ListItem.label,*)">overlays/big/OverlayUnWatched.png</value>
        <value condition="[StringCompare(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)]">overlays/big/$INFO[ListItem.Overlay]</value>
    </variable>

	<variable name="WatchedLabel">
        <value condition="[Container.Content(TVShows) | Container.Content(Seasons)] + IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
		<value condition="ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png) + substring(Container.FolderPath,plugin://plugin.video.xbmb3c)">$INFO[ListItem.Property(complete_percentage)]%</value>
		<value condition="ListItem.IsResumable + !StringCompare(ListItem.Overlay,OverlayWatched.png)">$INFO[ListItem.PercentPlayed]%</value>
    </variable>
	
	<variable name="ShowCaseWatchedImage">
        <value condition="!Skin.HasTheme(classic) + [StringCompare(ListItem.Overlay,OverlayWatched.png)">overlays/big/$INFO[ListItem.Overlay]</value>
		<value condition="Skin.HasTheme(classic) + [StringCompare(ListItem.Overlay,OverlayWatched.png)">overlays/rounded/$INFO[ListItem.Overlay]</value>
    </variable>
	
	<variable name="BannerImage">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value condition="!IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
        <value condition="!IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value>banner_default.png</value>
    </variable>
	
	<variable name="CustomHome1">
        <value condition="Skin.String(CustomHome.1.Label)">$INFO[Skin.String(CustomHome.1.Label)]</value>
        <value>$LOCALIZE[31096]</value>
    </variable>
	<variable name="CustomHome2">
        <value condition="Skin.String(CustomHome.2.Label)">$INFO[Skin.String(CustomHome.2.Label)]</value>
        <value>$LOCALIZE[31096]</value>
    </variable>
	<variable name="CustomHome3">
        <value condition="Skin.String(CustomHome.3.Label)">$INFO[Skin.String(CustomHome.3.Label)]</value>
        <value>$LOCALIZE[31096]</value>
    </variable>
	<variable name="CustomHome4">
        <value condition="Skin.String(CustomHome.4.Label)">$INFO[Skin.String(CustomHome.4.Label)]</value>
        <value>$LOCALIZE[31096]</value>
    </variable>
	<variable name="CustomHome5">
        <value condition="Skin.String(CustomHome.5.Label)">$INFO[Skin.String(CustomHome.5.Label)]</value>
        <value>$LOCALIZE[31096]</value>
    </variable>
	
	<variable name="CustomHome1Image">
        <value condition="Skin.String(CustomHome1Folder)">$INFO[Skin.String(CustomHome1Folder)]</value>
        <value>$INFO[Skin.String(CustomHome.1.Icon)]</value>
    </variable>
	<variable name="CustomHome2Image">
        <value condition="Skin.String(CustomHome2Folder)">$INFO[Skin.String(CustomHome2Folder)]</value>
        <value>$INFO[Skin.String(CustomHome.2.Icon)]</value>
    </variable>
	<variable name="CustomHome3Image">
        <value condition="Skin.String(CustomHome3Folder)">$INFO[Skin.String(CustomHome3Folder)]</value>
        <value>$INFO[Skin.String(CustomHome.3.Icon)]</value>
    </variable>
	<variable name="CustomHome4Image">
        <value condition="Skin.String(CustomHome4Folder)">$INFO[Skin.String(CustomHome4Folder)]</value>
        <value>$INFO[Skin.String(CustomHome.4.Icon)]</value>
    </variable>
	<variable name="CustomHome5Image">
        <value condition="Skin.String(CustomHome5Folder)">$INFO[Skin.String(CustomHome5Folder)]</value>
        <value>$INFO[Skin.String(CustomHome.5.Icon)]</value>
    </variable>
	
	
	
	
	
	
</includes>